{
	"id": "fe8adaf691d9fa26dcde7c8b9445ecde",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/snipe.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Interfaces\nimport \"./interfaces/ISwapRouter.sol\";\nimport \"./interfaces/IWETH9.sol\";\nimport \"./interfaces/IUniswapV3Factory.sol\";\nimport \"./interfaces/IERC20Minimal.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n// Define the contract with necessary interfaces and libraries\ncontract UniswapBot is ReentrancyGuard {\n    // Declare variables\n    ISwapRouter public uniswapV3Router;\n    IUniswapV3Factory public uniswapV3Factory;\n    IERC20Minimal public token;\n    IWETH9 public WETH;\n    address private owner;\n    uint256 public launchTimestamp;\n    uint256 public tradingWindow = 1800; // 30 minutes\n    bool public emergencyStopActive = false;\n\n    // Define events\n    event SwapETHForTokens(uint256 ethAmount, uint256 tokensReceived);\n    event SwapTokensForETH(uint256 tokenAmount, uint256 ethReceived);\n\n    event Withdraw(uint256 tokenAmount, uint256 ethAmount);\n    event EmergencyStopTriggered(bool isActive);\n\n    // Define modifiers\n    modifier onlyOwner() {\n        // Ensure only the owner can call the function\n        require(msg.sender == owner, \"Only the owner can call this function\");\n        _;\n    }\n\n    modifier withinTradingWindow() {\n        // Ensure trading is allowed only within the trading window\n        require(\n            block.timestamp <= launchTimestamp + tradingWindow,\n            \"Trading allowed only within the trading window\"\n        );\n        _;\n    }\n\n    modifier notInEmergency() {\n        // Ensure the emergency stop is not active\n        require(!emergencyStopActive, \"Emergency stop is active\");\n        _;\n    }\n\n    // Define constructor\n    constructor(\n        address _tokenAddress,\n        address _uniswapV3RouterAddress,\n        address _uniswapV3FactoryAddress,\n        address _WETHAddress,\n        uint256 _launchTimestamp,\n        uint256 _tradingWindow\n    ) {\n        require(_tradingWindow > 0, \"Trading window must be greater than 0\");\n\n        // Initialize variables in constructor\n        uniswapV3Router = ISwapRouter(_uniswapV3RouterAddress);\n        uniswapV3Factory = IUniswapV3Factory(_uniswapV3FactoryAddress);\n        token = IERC20Minimal(_tokenAddress);\n        owner = msg.sender;\n        WETH = IWETH9(_WETHAddress);\n        launchTimestamp = _launchTimestamp;\n        tradingWindow = _tradingWindow;\n    }\n\n    // Function to get the ETH balance of the contract\n    function getETHBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n//   // Function to get a quote for token swapping\n// function getQuote(\n//     uint256 amountIn,\n//     address tokenIn,\n//     address tokenOut,\n//     uint24 fee\n// ) public view returns (uint256 amountOut) {\n//     // Replace this function with your own implementation using an off-chain\n//     // service like the Uniswap SDK to fetch quotes for token swaps.\n//     // This is just a placeholder.\n//     amountIn - (fee );\n//     tokenIn;\n//     tokenOut;\n//     // Define the path for the swap\n//     uint24 chosenFee = 3000; // Choose the appropriate fee tier (e.g., 500, 3000, or 10000)\n//     amountOut = 1;\n// }\n\n\n\n    // External function to swap ETH for tokens a.k.a The Buy Function\n    function swapETHForTokens(\n        uint256 slippageTolerance\n    ) external payable nonReentrant withinTradingWindow notInEmergency {\n        require(\n            slippageTolerance >= 0 && slippageTolerance <= 10000,\n            \"Invalid slippage tolerance\"\n        );\n\n        uint256 ethAmount = msg.value;\n\n        // Define the path for the swap\n        address tokenIn = address(WETH); // TokenIn - The Token from the LP should be coming here \n        address tokenOut = address(token);\n\n        uint24 fee = 3000; // Choose the appropriate fee tier (e.g., 500, 3000, or 10000)\n\n    //         // Get the quote for the expected amount of tokens to receive\n    // uint256 tokensOut = getQuote(ethAmount, tokenIn, tokenOut, fee);\n\n    // // Calculate the minimum amount of tokens to receive based on the slippage tolerance\n    // uint256 minTokens = (tokensOut * (10000 - slippageTolerance)) / 10000;\n    uint256 minTokens = 666666; // Set a fixed minimum tokens to receive, change as needed\n    // Perform the swap\n    try\n        uniswapV3Router.exactInputSingle{value: ethAmount}(\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: tokenIn,\n                tokenOut: tokenOut,\n                fee: fee,\n                recipient: address(this),\n                deadline: block.timestamp + 300, // 5 minutes\n                amountIn: ethAmount,\n                amountOutMinimum: minTokens,\n                sqrtPriceLimitX96: 0\n            })\n        )\n    returns (uint256 tokensReceived) {\n        require(\n            tokensReceived >= minTokens,\n            \"Received less tokens than expected\"\n        );\n\n        emit SwapETHForTokens(ethAmount, tokensReceived);\n    } catch Error(string memory reason) {\n        // Handle errors from Uniswap router\n        revert(reason);\n    } catch {\n        revert(\"Swap failed\");\n    }\n}\n\n// External function to swap tokens for ETH a.k.a The Sell Function\nfunction swapTokensForETH(\n    uint256 tokenAmount,\n    uint256 slippageTolerance\n) external nonReentrant withinTradingWindow notInEmergency {\n    require(tokenAmount > 0, \"Token amount must be greater than 0\");\n    require(\n        slippageTolerance >= 0 && slippageTolerance <= 10000,\n        \"Invalid slippage tolerance\"\n    );\n\n    // Transfer tokens from the sender to the contract\n    token.transferFrom(msg.sender, address(this), tokenAmount);\n\n    // Define the path for the swap\n    address tokenIn = address(token);\n    address tokenOut = address(WETH);\n\n    uint24 fee = 3000; // Choose the appropriate fee tier (e.g., 500, 3000, or 10000)\n\n    // Approve the Uniswap router to spend tokens\n    token.approve(address(uniswapV3Router), tokenAmount);\n\n    // // Get the quote for the expected amount of ETH to receive\n    // uint256 ethOut = getQuote(tokenAmount, tokenIn, tokenOut, fee);\n\n    // // Calculate the minimum amount of ETH to receive based on the slippage tolerance\n    // uint256 minEth = (ethOut * (10000 - slippageTolerance)) / 10000;\n\n    uint256 minEth = 1; // Set a fixed minimum ETH to receive, change as needed\n\n\n    // Perform the swap\n    try\n        uniswapV3Router.exactInputSingle(\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: tokenIn,\n                tokenOut: tokenOut,\n                fee: fee,\n                recipient: msg.sender, // Send the received ETH directly to the sender\n                deadline: block.timestamp + 300, // 5 minutes\n                amountIn: tokenAmount,\n                amountOutMinimum: minEth,\n                sqrtPriceLimitX96: 0\n            })\n        )\n    returns (uint256 ethReceived) {\n        require(ethReceived >= minEth, \"Received less ETH than expected\");\n\n        emit SwapTokensForETH(tokenAmount, ethReceived);\n    } catch Error(string memory reason) {\n        // Handle errors from Uniswap router\n        revert(reason);\n    } catch {\n        revert(\"Swap failed\");\n    }\n}\n\n\n   \n\n    // Function to withdraw tokens and ETH\n    function withdraw() public onlyOwner {\n        // Get the balance of the contract\n        uint256 tokenBalance = token.balanceOf(address(this));\n        uint256 ethBalance = address(this).balance;\n\n        // Transfer the tokens and ETH to the owner\n        token.transfer(owner, tokenBalance);\n        payable(owner).transfer(ethBalance);\n\n        // Emit event\n        emit Withdraw(tokenBalance, ethBalance);\n    }\n\n    // Function to trigger emergency stop\n    function triggerEmergencyStop() public onlyOwner {\n        // Toggle the emergency stop status\n        emergencyStopActive = !emergencyStopActive;\n\n        // Emit event\n        emit EmergencyStopTriggered(emergencyStopActive);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"Contracts/interfaces/IERC20Minimal.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n\n\n/// @title Minimal ERC20 interface for Uniswap\n/// @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3\ninterface IERC20Minimal {\n    /// @notice Returns the balance of a token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"
			},
			"Contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"Contracts/interfaces/IWETH9.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n\nimport './IERC20Minimal.sol';\n\n/// @title Interface for WETH9\ninterface IWETH9 is IERC20Minimal {\n    /// @notice Deposit ether to get wrapped ether\n    function deposit() external payable;\n\n    /// @notice Withdraw wrapped ether to get ether\n    function withdraw(uint256) external;\n\n}"
			},
			"Contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport './callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}"
			},
			"Contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/interfaces/IERC20Minimal.sol": {
				"IERC20Minimal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for Uniswap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/IERC20Minimal.sol\":\"IERC20Minimal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0x5780901e2263a6f5bddaaaa83f81992564cbf53accf8b190dda0175de5f35696\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b5be2e3cfffb8305c25ad102ad6f87f9b850cc7e4786b5cf5e5dc5b566120bb8\",\"dweb:/ipfs/QmPuHb8EF82goYmJbY8oQWhtAwjqdZdFPpdGd5Qu48eskK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in Uniswap V3",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xbd16bbd1dc97411ef2a2eec941ac65be759f0ab5a4a4c41a8dd67f21c670478d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8b138b6f9fa1da88029e21cdf095aeb5c55f8967383ff50efbb475512f874250\",\"dweb:/ipfs/QmRAHEyQUuJ7c3nqKNg9xFWcm9RYWbjaumFkCTerBRcAJf\"]},\"Contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x0b55e4b363711251c767e2ea579cdab2625e81857b2ccebe26060ce5bcf428f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://84473fcc963e6a4ff6d7db9f205c39938fd93050a2307030867c41d0bad04e82\",\"dweb:/ipfs/Qmc5LCzCejHES3kfqY55LH8n2GEYMCGHxc8rmjy5LX6xfz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xeb8deac356a9f2aed13f1caf289a785c7457404cdb516510001c3b22a2ad717d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d54ed6b3463c0b1b01866054d7b71618e5006fac287e344758958cf32dbe88cd\",\"dweb:/ipfs/QmQudPaKpDyHcMLRsY8vwysPhbprivBdMism4PtjMwJ6f9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/IWETH9.sol": {
				"IWETH9": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Interface for WETH9",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/IWETH9.sol\":\"IWETH9\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0x5780901e2263a6f5bddaaaa83f81992564cbf53accf8b190dda0175de5f35696\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b5be2e3cfffb8305c25ad102ad6f87f9b850cc7e4786b5cf5e5dc5b566120bb8\",\"dweb:/ipfs/QmPuHb8EF82goYmJbY8oQWhtAwjqdZdFPpdGd5Qu48eskK\"]},\"Contracts/interfaces/IWETH9.sol\":{\"keccak256\":\"0x9cc019937d4a4ffca2130389692acd71c135fa4ed8a1332875f6da665aa6ab6e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://53abdaf27bc33bb864602f3030ec1c680384e816274de1479a4f5e6a56e73d7b\",\"dweb:/ipfs/QmaEKGAaH17rHeUezqudbAauotRFNvuSTccJiAZkYUqDKz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"deposit()": {
								"notice": "Deposit ether to get wrapped ether"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw wrapped ether to get ether"
							}
						},
						"version": 1
					}
				}
			},
			"Contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x0b55e4b363711251c767e2ea579cdab2625e81857b2ccebe26060ce5bcf428f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://84473fcc963e6a4ff6d7db9f205c39938fd93050a2307030867c41d0bad04e82\",\"dweb:/ipfs/Qmc5LCzCejHES3kfqY55LH8n2GEYMCGHxc8rmjy5LX6xfz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"Contracts/snipe.sol": {
				"UniswapBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapV3RouterAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapV3FactoryAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETHAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_launchTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tradingWindow",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "EmergencyStopTriggered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensReceived",
									"type": "uint256"
								}
							],
							"name": "SwapETHForTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethReceived",
									"type": "uint256"
								}
							],
							"name": "SwapTokensForETH",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IWETH9",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyStopActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "slippageTolerance",
									"type": "uint256"
								}
							],
							"name": "swapETHForTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slippageTolerance",
									"type": "uint256"
								}
							],
							"name": "swapTokensForETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20Minimal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingWindow",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "triggerEmergencyStop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV3Factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV3Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV3Router",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/snipe.sol\":357:7905  contract UniswapBot is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/snipe.sol\":664:668  1800 */\n  0x0708\n    /* \"Contracts/snipe.sol\":633:668  uint256 public tradingWindow = 1800 */\n  0x07\n  sstore\n    /* \"Contracts/snipe.sol\":688:727  bool public emergencyStopActive = false */\n  0x08\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"Contracts/snipe.sol\":1680:2372  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"Contracts/snipe.sol\":1926:1944  _tradingWindow > 0 */\n  dup1\n    /* \"Contracts/snipe.sol\":1918:1986  require(_tradingWindow > 0, \"Trading window must be greater than 0\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":991:993   */\n  0x20\n    /* \"Contracts/snipe.sol\":1918:1986  require(_tradingWindow > 0, \"Trading window must be greater than 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":973:994   */\n  mstore\n    /* \"#utility.yul\":1030:1032   */\n  0x25\n    /* \"#utility.yul\":1010:1028   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1003:1033   */\n  mstore\n    /* \"#utility.yul\":1069:1103   */\n  0x54726164696e672077696e646f77206d75737420626520677265617465722074\n    /* \"#utility.yul\":1049:1067   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1042:1104   */\n  mstore\n  shl(0xdc, 0x068616e203)\n    /* \"#utility.yul\":1120:1138   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1113:1148   */\n  mstore\n    /* \"#utility.yul\":1165:1184   */\n  0x84\n  add\n    /* \"Contracts/snipe.sol\":1918:1986  require(_tradingWindow > 0, \"Trading window must be greater than 0\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"Contracts/snipe.sol\":2044:2059  uniswapV3Router */\n  0x01\n    /* \"Contracts/snipe.sol\":2044:2098  uniswapV3Router = ISwapRouter(_uniswapV3RouterAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap8\n  dup9\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Contracts/snipe.sol\":2108:2124  uniswapV3Factory */\n  0x02\n    /* \"Contracts/snipe.sol\":2108:2170  uniswapV3Factory = IUniswapV3Factory(_uniswapV3FactoryAddress) */\n  dup1\n  sload\n  dup3\n  and\n  swap6\n  dup8\n  and\n  swap6\n  swap1\n  swap6\n  or\n  swap1\n  swap5\n  sstore\n    /* \"Contracts/snipe.sol\":2180:2185  token */\n  0x03\n    /* \"Contracts/snipe.sol\":2180:2216  token = IERC20Minimal(_tokenAddress) */\n  dup1\n  sload\n  dup6\n  and\n  swap7\n  dup7\n  and\n  swap7\n  swap1\n  swap7\n  or\n  swap1\n  swap6\n  sstore\n    /* \"Contracts/snipe.sol\":2226:2231  owner */\n  0x05\n    /* \"Contracts/snipe.sol\":2226:2244  owner = msg.sender */\n  dup1\n  sload\n    /* \"Contracts/snipe.sol\":2234:2244  msg.sender */\n  caller\n    /* \"Contracts/snipe.sol\":2226:2244  owner = msg.sender */\n  swap1\n  dup6\n  and\n  or\n  swap1\n  sstore\n    /* \"Contracts/snipe.sol\":2254:2258  WETH */\n  0x04\n    /* \"Contracts/snipe.sol\":2254:2281  WETH = IWETH9(_WETHAddress) */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  swap2\n  swap1\n  swap4\n  and\n  or\n  swap1\n  sstore\n    /* \"Contracts/snipe.sol\":2291:2306  launchTimestamp */\n  0x06\n    /* \"Contracts/snipe.sol\":2291:2325  launchTimestamp = _launchTimestamp */\n  sstore\n    /* \"Contracts/snipe.sol\":2335:2348  tradingWindow */\n  0x07\n    /* \"Contracts/snipe.sol\":2335:2365  tradingWindow = _tradingWindow */\n  sstore\n    /* \"Contracts/snipe.sol\":357:7905  contract UniswapBot is ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"#utility.yul\":14:191   */\ntag_12:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_15:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:784   */\ntag_3:\n    /* \"#utility.yul\":311:317   */\n  0x00\n    /* \"#utility.yul\":319:325   */\n  dup1\n    /* \"#utility.yul\":327:333   */\n  0x00\n    /* \"#utility.yul\":335:341   */\n  dup1\n    /* \"#utility.yul\":343:349   */\n  0x00\n    /* \"#utility.yul\":351:357   */\n  dup1\n    /* \"#utility.yul\":404:407   */\n  0xc0\n    /* \"#utility.yul\":392:401   */\n  dup8\n    /* \"#utility.yul\":383:390   */\n  dup10\n    /* \"#utility.yul\":379:402   */\n  sub\n    /* \"#utility.yul\":375:408   */\n  slt\n    /* \"#utility.yul\":372:425   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":421:422   */\n  0x00\n    /* \"#utility.yul\":418:419   */\n  dup1\n    /* \"#utility.yul\":411:423   */\n  revert\n    /* \"#utility.yul\":372:425   */\ntag_17:\n    /* \"#utility.yul\":444:484   */\n  tag_18\n    /* \"#utility.yul\":474:483   */\n  dup8\n    /* \"#utility.yul\":444:484   */\n  tag_12\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":434:484   */\n  swap6\n  pop\n    /* \"#utility.yul\":503:552   */\n  tag_19\n    /* \"#utility.yul\":548:550   */\n  0x20\n    /* \"#utility.yul\":537:546   */\n  dup9\n    /* \"#utility.yul\":533:551   */\n  add\n    /* \"#utility.yul\":503:552   */\n  tag_12\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":493:552   */\n  swap5\n  pop\n    /* \"#utility.yul\":571:620   */\n  tag_20\n    /* \"#utility.yul\":616:618   */\n  0x40\n    /* \"#utility.yul\":605:614   */\n  dup9\n    /* \"#utility.yul\":601:619   */\n  add\n    /* \"#utility.yul\":571:620   */\n  tag_12\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":561:620   */\n  swap4\n  pop\n    /* \"#utility.yul\":639:688   */\n  tag_21\n    /* \"#utility.yul\":684:686   */\n  0x60\n    /* \"#utility.yul\":673:682   */\n  dup9\n    /* \"#utility.yul\":669:687   */\n  add\n    /* \"#utility.yul\":639:688   */\n  tag_12\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":629:688   */\n  swap3\n  pop\n    /* \"#utility.yul\":728:731   */\n  0x80\n    /* \"#utility.yul\":717:726   */\n  dup8\n    /* \"#utility.yul\":713:732   */\n  add\n    /* \"#utility.yul\":707:733   */\n  mload\n    /* \"#utility.yul\":697:733   */\n  swap2\n  pop\n    /* \"#utility.yul\":773:776   */\n  0xa0\n    /* \"#utility.yul\":762:771   */\n  dup8\n    /* \"#utility.yul\":758:777   */\n  add\n    /* \"#utility.yul\":752:778   */\n  mload\n    /* \"#utility.yul\":742:778   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:784   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":789:1190   */\ntag_13:\n    /* \"Contracts/snipe.sol\":357:7905  contract UniswapBot is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/snipe.sol\":357:7905  contract UniswapBot is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5b549182\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x5b549182\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x65cf7c9b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6e947298\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa22280a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x2c76d7a6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2eab2841\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x358c7660\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x405d8e74\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x554a731d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/snipe.sol\":427:461  ISwapRouter public uniswapV3Router */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      sload(0x01)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":197:229   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":179:230   */\n      dup2\n      mstore\n        /* \"#utility.yul\":167:169   */\n      0x20\n        /* \"#utility.yul\":152:170   */\n      add\n        /* \"Contracts/snipe.sol\":427:461  ISwapRouter public uniswapV3Router */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/snipe.sol\":3235:5094  function swapETHForTokens(... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Contracts/snipe.sol\":633:668  uint256 public tradingWindow = 1800 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      sload(0x07)\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":572:597   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":560:562   */\n      0x20\n        /* \"#utility.yul\":545:563   */\n      add\n        /* \"Contracts/snipe.sol\":633:668  uint256 public tradingWindow = 1800 */\n      tag_18\n        /* \"#utility.yul\":426:603   */\n      jump\n        /* \"Contracts/snipe.sol\":7205:7622  function withdraw() public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_20\n      tag_31\n      jump\t// in\n        /* \"Contracts/snipe.sol\":688:727  bool public emergencyStopActive = false */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sload(0x08)\n      tag_33\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":773:787   */\n      swap1\n      iszero\n        /* \"#utility.yul\":766:788   */\n      iszero\n        /* \"#utility.yul\":748:789   */\n      dup2\n      mstore\n        /* \"#utility.yul\":736:738   */\n      0x20\n        /* \"#utility.yul\":721:739   */\n      add\n        /* \"Contracts/snipe.sol\":688:727  bool public emergencyStopActive = false */\n      tag_18\n        /* \"#utility.yul\":608:795   */\n      jump\n        /* \"Contracts/snipe.sol\":7670:7903  function triggerEmergencyStop() public onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_20\n      tag_39\n      jump\t// in\n        /* \"Contracts/snipe.sol\":467:508  IUniswapV3Factory public uniswapV3Factory */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      sload(0x02)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Contracts/snipe.sol\":597:627  uint256 public launchTimestamp */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_25\n      sload(0x06)\n      dup2\n      jump\n        /* \"Contracts/snipe.sol\":2433:2533  function getETHBalance() public view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n        /* \"Contracts/snipe.sol\":2505:2526  address(this).balance */\n      selfbalance\n        /* \"Contracts/snipe.sol\":2433:2533  function getETHBalance() public view returns (uint256) {... */\n      jump(tag_25)\n        /* \"Contracts/snipe.sol\":5164:7150  function swapTokensForETH(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_20\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"Contracts/snipe.sol\":546:564  IWETH9 public WETH */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sload(0x04)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Contracts/snipe.sol\":514:540  IERC20Minimal public token */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sload(0x03)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Contracts/snipe.sol\":3235:5094  function swapETHForTokens(... */\n    tag_23:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_69\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_70\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_69:\n        /* \"Contracts/snipe.sol\":1377:1390  tradingWindow */\n      sload(0x07)\n        /* \"Contracts/snipe.sol\":1359:1374  launchTimestamp */\n      sload(0x06)\n        /* \"Contracts/snipe.sol\":1359:1390  launchTimestamp + tradingWindow */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"Contracts/snipe.sol\":1340:1355  block.timestamp */\n      timestamp\n        /* \"Contracts/snipe.sol\":1340:1390  block.timestamp <= launchTimestamp + tradingWindow */\n      gt\n      iszero\n        /* \"Contracts/snipe.sol\":1319:1462  require(... */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"Contracts/snipe.sol\":1582:1601  emergencyStopActive */\n      and(0xff, sload(0x08))\n        /* \"Contracts/snipe.sol\":1581:1601  !emergencyStopActive */\n      iszero\n        /* \"Contracts/snipe.sol\":1573:1630  require(!emergencyStopActive, \"Emergency stop is active\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2581:2583   */\n      0x20\n        /* \"Contracts/snipe.sol\":1573:1630  require(!emergencyStopActive, \"Emergency stop is active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2563:2584   */\n      mstore\n        /* \"#utility.yul\":2620:2622   */\n      0x18\n        /* \"#utility.yul\":2600:2618   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2593:2623   */\n      mstore\n      shl(0x40, 0x456d657267656e63792073746f7020697320616374697665)\n        /* \"#utility.yul\":2639:2657   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2632:2686   */\n      mstore\n        /* \"#utility.yul\":2703:2721   */\n      0x64\n      add\n        /* \"Contracts/snipe.sol\":1573:1630  require(!emergencyStopActive, \"Emergency stop is active\") */\n      tag_75\n        /* \"#utility.yul\":2379:2727   */\n      jump\n        /* \"Contracts/snipe.sol\":1573:1630  require(!emergencyStopActive, \"Emergency stop is active\") */\n    tag_78:\n        /* \"Contracts/snipe.sol\":3445:3450  10000 */\n      0x2710\n        /* \"Contracts/snipe.sol\":3424:3441  slippageTolerance */\n      dup2\n        /* \"Contracts/snipe.sol\":3424:3450  slippageTolerance <= 10000 */\n      gt\n      iszero\n        /* \"Contracts/snipe.sol\":3377:3502  require(... */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2934:2936   */\n      0x20\n        /* \"Contracts/snipe.sol\":3377:3502  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2916:2937   */\n      mstore\n        /* \"#utility.yul\":2973:2975   */\n      0x1a\n        /* \"#utility.yul\":2953:2971   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2946:2976   */\n      mstore\n        /* \"#utility.yul\":3012:3040   */\n      0x496e76616c696420736c69707061676520746f6c6572616e6365000000000000\n        /* \"#utility.yul\":2992:3010   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2985:3041   */\n      mstore\n        /* \"#utility.yul\":3058:3076   */\n      0x64\n      add\n        /* \"Contracts/snipe.sol\":3377:3502  require(... */\n      tag_75\n        /* \"#utility.yul\":2732:3082   */\n      jump\n        /* \"Contracts/snipe.sol\":3377:3502  require(... */\n    tag_83:\n        /* \"Contracts/snipe.sol\":3619:3623  WETH */\n      sload(0x04)\n        /* \"Contracts/snipe.sol\":3719:3724  token */\n      sload(0x03)\n        /* \"Contracts/snipe.sol\":3619:3623  WETH */\n      0x01\n        /* \"Contracts/snipe.sol\":4270:4285  uniswapV3Router */\n      sload\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      0x40\n      dup1\n      mload\n        /* \"Contracts/snipe.sol\":3619:3623  WETH */\n      0x0100\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/snipe.sol\":3619:3623  WETH */\n      swap5\n      dup6\n      and\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      dup1\n      dup3\n      mstore\n        /* \"Contracts/snipe.sol\":3719:3724  token */\n      swap4\n      dup6\n      and\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"Contracts/snipe.sol\":3749:3753  3000 */\n      0x0bb8\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      swap3\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n        /* \"Contracts/snipe.sol\":4502:4506  this */\n      address\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      0x60\n      dup4\n      add\n      mstore\n        /* \"Contracts/snipe.sol\":3533:3542  msg.value */\n      callvalue\n      swap6\n        /* \"Contracts/snipe.sol\":3719:3724  token */\n      swap1\n      swap4\n        /* \"Contracts/snipe.sol\":4163:4169  666666 */\n      0x0a2c2a\n      swap3\n        /* \"Contracts/snipe.sol\":4270:4285  uniswapV3Router */\n      swap2\n      and\n      swap1\n        /* \"Contracts/snipe.sol\":4270:4302  uniswapV3Router.exactInputSingle */\n      0x414bf389\n      swap1\n        /* \"Contracts/snipe.sol\":3533:3542  msg.value */\n      dup8\n      swap1\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      0x80\n      dup2\n      add\n        /* \"Contracts/snipe.sol\":4535:4556  block.timestamp + 300 */\n      tag_86\n        /* \"Contracts/snipe.sol\":4535:4550  block.timestamp */\n      timestamp\n        /* \"Contracts/snipe.sol\":4553:4556  300 */\n      0x012c\n        /* \"Contracts/snipe.sol\":4535:4556  block.timestamp + 300 */\n      tag_73\n      jump\t// in\n    tag_86:\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/snipe.sol\":4597:4606  ethAmount */\n      dup10\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/snipe.sol\":4642:4651  minTokens */\n      dup6\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/snipe.sol\":4688:4689  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/snipe.sol\":4334:4704  ISwapRouter.ExactInputSingleParams({... */\n      and\n      dup2\n      mstore\n      pop\n        /* \"Contracts/snipe.sol\":4270:4714  uniswapV3Router.exactInputSingle{value: ethAmount}(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_89\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_90\n      swap2\n      dup2\n      add\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      0x01\n    tag_89:\n        /* \"Contracts/snipe.sol\":4258:5092  try... */\n      tag_92\n      jumpi\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x08c379a0\n      sub\n      tag_95\n      jumpi\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      tag_100\n      jumpi\n      pop\n      jump(tag_94)\n    tag_100:\n        /* \"Contracts/snipe.sol\":5033:5039  reason */\n      dup1\n        /* \"Contracts/snipe.sol\":5026:5040  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n        /* \"Contracts/snipe.sol\":4258:5092  try... */\n    tag_95:\n      pop\n    tag_94:\n        /* \"Contracts/snipe.sol\":5064:5085  revert(\"Swap failed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6040:6042   */\n      0x20\n        /* \"Contracts/snipe.sol\":5064:5085  revert(\"Swap failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6022:6043   */\n      mstore\n        /* \"#utility.yul\":6079:6081   */\n      0x0b\n        /* \"#utility.yul\":6059:6077   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6052:6082   */\n      mstore\n      shl(0xaa, 0x14ddd85c0819985a5b1959)\n        /* \"#utility.yul\":6098:6116   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6091:6132   */\n      mstore\n        /* \"#utility.yul\":6149:6167   */\n      0x64\n      add\n        /* \"Contracts/snipe.sol\":5064:5085  revert(\"Swap failed\") */\n      tag_75\n        /* \"#utility.yul\":5838:6173   */\n      jump\n        /* \"Contracts/snipe.sol\":4258:5092  try... */\n    tag_92:\n        /* \"Contracts/snipe.sol\":4801:4810  minTokens */\n      dup2\n        /* \"Contracts/snipe.sol\":4783:4797  tokensReceived */\n      dup2\n        /* \"Contracts/snipe.sol\":4783:4810  tokensReceived >= minTokens */\n      lt\n      iszero\n        /* \"Contracts/snipe.sol\":4762:4870  require(... */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6380:6382   */\n      0x20\n        /* \"Contracts/snipe.sol\":4762:4870  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6362:6383   */\n      mstore\n        /* \"#utility.yul\":6419:6421   */\n      0x22\n        /* \"#utility.yul\":6399:6417   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6392:6422   */\n      mstore\n        /* \"#utility.yul\":6458:6492   */\n      0x5265636569766564206c65737320746f6b656e73207468616e20657870656374\n        /* \"#utility.yul\":6438:6456   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6431:6493   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":6509:6527   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6502:6534   */\n      mstore\n        /* \"#utility.yul\":6551:6570   */\n      0x84\n      add\n        /* \"Contracts/snipe.sol\":4762:4870  require(... */\n      tag_75\n        /* \"#utility.yul\":6178:6576   */\n      jump\n        /* \"Contracts/snipe.sol\":4762:4870  require(... */\n    tag_106:\n        /* \"Contracts/snipe.sol\":4886:4929  SwapETHForTokens(ethAmount, tokensReceived) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6755:6780   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":6811:6813   */\n      0x20\n        /* \"#utility.yul\":6796:6814   */\n      dup2\n      add\n        /* \"#utility.yul\":6789:6823   */\n      dup4\n      swap1\n      mstore\n        /* \"Contracts/snipe.sol\":4886:4929  SwapETHForTokens(ethAmount, tokensReceived) */\n      0x237f99c5b951562a01b6f0f161fb746ae06154df5cf173bbe71b80abae954630\n      swap2\n        /* \"#utility.yul\":6728:6746   */\n      add\n        /* \"Contracts/snipe.sol\":4886:4929  SwapETHForTokens(ethAmount, tokensReceived) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/snipe.sol\":4719:4936  returns (uint256 tokensReceived) {... */\n      pop\n        /* \"Contracts/snipe.sol\":3367:5094  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_111\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_111:\n        /* \"Contracts/snipe.sol\":3235:5094  function swapETHForTokens(... */\n      pop\n      jump\t// out\n        /* \"Contracts/snipe.sol\":7205:7622  function withdraw() public onlyOwner {... */\n    tag_31:\n        /* \"Contracts/snipe.sol\":1139:1144  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/snipe.sol\":1125:1135  msg.sender */\n      caller\n        /* \"Contracts/snipe.sol\":1125:1144  msg.sender == owner */\n      eq\n        /* \"Contracts/snipe.sol\":1117:1186  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_116\n      jump\t// in\n    tag_114:\n        /* \"Contracts/snipe.sol\":7318:7323  token */\n      sload(0x03)\n        /* \"Contracts/snipe.sol\":7318:7348  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Contracts/snipe.sol\":7342:7346  this */\n      address\n        /* \"Contracts/snipe.sol\":7318:7348  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":179:230   */\n      mstore\n        /* \"Contracts/snipe.sol\":7295:7315  uint256 tokenBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/snipe.sol\":7318:7323  token */\n      and\n      swap1\n        /* \"Contracts/snipe.sol\":7318:7333  token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":152:170   */\n      0x24\n      add\n        /* \"Contracts/snipe.sol\":7318:7348  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_122:\n        /* \"Contracts/snipe.sol\":7463:7468  token */\n      sload(0x03)\n        /* \"Contracts/snipe.sol\":7478:7483  owner */\n      sload(0x05)\n        /* \"Contracts/snipe.sol\":7463:7498  token.transfer(owner, tokenBalance) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/snipe.sol\":7478:7483  owner */\n      swap2\n      dup3\n      and\n        /* \"Contracts/snipe.sol\":7463:7498  token.transfer(owner, tokenBalance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7622:7673   */\n      mstore\n        /* \"#utility.yul\":7689:7707   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7682:7716   */\n      dup5\n      swap1\n      mstore\n        /* \"Contracts/snipe.sol\":7295:7348  uint256 tokenBalance = token.balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"Contracts/snipe.sol\":7379:7400  address(this).balance */\n      selfbalance\n      swap3\n        /* \"Contracts/snipe.sol\":7463:7468  token */\n      swap2\n      and\n      swap1\n        /* \"Contracts/snipe.sol\":7463:7477  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7595:7613   */\n      0x44\n      add\n        /* \"Contracts/snipe.sol\":7463:7498  token.transfer(owner, tokenBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      pop\n        /* \"Contracts/snipe.sol\":7516:7521  owner */\n      sload(0x05)\n        /* \"Contracts/snipe.sol\":7508:7543  payable(owner).transfer(ethBalance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/snipe.sol\":7516:7521  owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Contracts/snipe.sol\":7508:7543  payable(owner).transfer(ethBalance) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"Contracts/snipe.sol\":7532:7542  ethBalance */\n      dup4\n      swap1\n        /* \"Contracts/snipe.sol\":7516:7521  owner */\n      0x00\n        /* \"Contracts/snipe.sol\":7508:7543  payable(owner).transfer(ethBalance) */\n      dup2\n        /* \"Contracts/snipe.sol\":7516:7521  owner */\n      dup2\n        /* \"Contracts/snipe.sol\":7508:7543  payable(owner).transfer(ethBalance) */\n      dup2\n        /* \"Contracts/snipe.sol\":7532:7542  ethBalance */\n      dup6\n        /* \"Contracts/snipe.sol\":7516:7521  owner */\n      dup9\n        /* \"Contracts/snipe.sol\":7508:7543  payable(owner).transfer(ethBalance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n        /* \"Contracts/snipe.sol\":7581:7615  Withdraw(tokenBalance, ethBalance) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6755:6780   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6811:6813   */\n      0x20\n        /* \"#utility.yul\":6796:6814   */\n      dup2\n      add\n        /* \"#utility.yul\":6789:6823   */\n      dup4\n      swap1\n      mstore\n        /* \"Contracts/snipe.sol\":7581:7615  Withdraw(tokenBalance, ethBalance) */\n      0x56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8\n      swap2\n        /* \"#utility.yul\":6728:6746   */\n      add\n        /* \"Contracts/snipe.sol\":7581:7615  Withdraw(tokenBalance, ethBalance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/snipe.sol\":7242:7622  {... */\n      pop\n      pop\n        /* \"Contracts/snipe.sol\":7205:7622  function withdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"Contracts/snipe.sol\":7670:7903  function triggerEmergencyStop() public onlyOwner {... */\n    tag_39:\n        /* \"Contracts/snipe.sol\":1139:1144  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/snipe.sol\":1125:1135  msg.sender */\n      caller\n        /* \"Contracts/snipe.sol\":1125:1144  msg.sender == owner */\n      eq\n        /* \"Contracts/snipe.sol\":1117:1186  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_116\n      jump\t// in\n    tag_133:\n        /* \"Contracts/snipe.sol\":7796:7815  emergencyStopActive */\n      0x08\n      dup1\n      sload\n      0xff\n      dup1\n      dup3\n      and\n        /* \"Contracts/snipe.sol\":7795:7815  !emergencyStopActive */\n      iszero\n      not(0xff)\n        /* \"Contracts/snipe.sol\":7773:7815  emergencyStopActive = !emergencyStopActive */\n      swap1\n      swap3\n      and\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Contracts/snipe.sol\":7853:7896  EmergencyStopTriggered(emergencyStopActive) */\n      mload(0x40)\n        /* \"Contracts/snipe.sol\":7876:7895  emergencyStopActive */\n      swap2\n      and\n        /* \"#utility.yul\":773:787   */\n      iszero\n        /* \"#utility.yul\":766:788   */\n      iszero\n        /* \"#utility.yul\":748:789   */\n      dup2\n      mstore\n        /* \"Contracts/snipe.sol\":7853:7896  EmergencyStopTriggered(emergencyStopActive) */\n      0x691e4978574c0c1bc8adb37c112d98eb5cdd6456fe044b35cec1f4a4f3c7f60e\n      swap1\n        /* \"#utility.yul\":736:738   */\n      0x20\n        /* \"#utility.yul\":721:739   */\n      add\n        /* \"Contracts/snipe.sol\":7853:7896  EmergencyStopTriggered(emergencyStopActive) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/snipe.sol\":7670:7903  function triggerEmergencyStop() public onlyOwner {... */\n      jump\t// out\n        /* \"Contracts/snipe.sol\":5164:7150  function swapTokensForETH(... */\n    tag_57:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_139\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_70\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_139:\n        /* \"Contracts/snipe.sol\":1377:1390  tradingWindow */\n      sload(0x07)\n        /* \"Contracts/snipe.sol\":1359:1374  launchTimestamp */\n      sload(0x06)\n        /* \"Contracts/snipe.sol\":1359:1390  launchTimestamp + tradingWindow */\n      tag_141\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_141:\n        /* \"Contracts/snipe.sol\":1340:1355  block.timestamp */\n      timestamp\n        /* \"Contracts/snipe.sol\":1340:1390  block.timestamp <= launchTimestamp + tradingWindow */\n      gt\n      iszero\n        /* \"Contracts/snipe.sol\":1319:1462  require(... */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_142:\n        /* \"Contracts/snipe.sol\":1582:1601  emergencyStopActive */\n      and(0xff, sload(0x08))\n        /* \"Contracts/snipe.sol\":1581:1601  !emergencyStopActive */\n      iszero\n        /* \"Contracts/snipe.sol\":1573:1630  require(!emergencyStopActive, \"Emergency stop is active\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2581:2583   */\n      0x20\n        /* \"Contracts/snipe.sol\":1573:1630  require(!emergencyStopActive, \"Emergency stop is active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2563:2584   */\n      mstore\n        /* \"#utility.yul\":2620:2622   */\n      0x18\n        /* \"#utility.yul\":2600:2618   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2593:2623   */\n      mstore\n      shl(0x40, 0x456d657267656e63792073746f7020697320616374697665)\n        /* \"#utility.yul\":2639:2657   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2632:2686   */\n      mstore\n        /* \"#utility.yul\":2703:2721   */\n      0x64\n      add\n        /* \"Contracts/snipe.sol\":1573:1630  require(!emergencyStopActive, \"Emergency stop is active\") */\n      tag_75\n        /* \"#utility.yul\":2379:2727   */\n      jump\n        /* \"Contracts/snipe.sol\":1573:1630  require(!emergencyStopActive, \"Emergency stop is active\") */\n    tag_145:\n        /* \"Contracts/snipe.sol\":5333:5334  0 */\n      0x00\n        /* \"Contracts/snipe.sol\":5319:5330  tokenAmount */\n      dup3\n        /* \"Contracts/snipe.sol\":5319:5334  tokenAmount > 0 */\n      gt\n        /* \"Contracts/snipe.sol\":5311:5374  require(tokenAmount > 0, \"Token amount must be greater than 0\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8211:8213   */\n      0x20\n        /* \"Contracts/snipe.sol\":5311:5374  require(tokenAmount > 0, \"Token amount must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8193:8214   */\n      mstore\n        /* \"#utility.yul\":8250:8252   */\n      0x23\n        /* \"#utility.yul\":8230:8248   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8223:8253   */\n      mstore\n        /* \"#utility.yul\":8289:8323   */\n      0x546f6b656e20616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":8269:8287   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8262:8324   */\n      mstore\n      shl(0xec, 0x06e203)\n        /* \"#utility.yul\":8340:8358   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8333:8366   */\n      mstore\n        /* \"#utility.yul\":8383:8402   */\n      0x84\n      add\n        /* \"Contracts/snipe.sol\":5311:5374  require(tokenAmount > 0, \"Token amount must be greater than 0\") */\n      tag_75\n        /* \"#utility.yul\":8009:8408   */\n      jump\n        /* \"Contracts/snipe.sol\":5311:5374  require(tokenAmount > 0, \"Token amount must be greater than 0\") */\n    tag_148:\n        /* \"Contracts/snipe.sol\":5444:5449  10000 */\n      0x2710\n        /* \"Contracts/snipe.sol\":5423:5440  slippageTolerance */\n      dup2\n        /* \"Contracts/snipe.sol\":5423:5449  slippageTolerance <= 10000 */\n      gt\n      iszero\n        /* \"Contracts/snipe.sol\":5380:5493  require(... */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2934:2936   */\n      0x20\n        /* \"Contracts/snipe.sol\":5380:5493  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2916:2937   */\n      mstore\n        /* \"#utility.yul\":2973:2975   */\n      0x1a\n        /* \"#utility.yul\":2953:2971   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2946:2976   */\n      mstore\n        /* \"#utility.yul\":3012:3040   */\n      0x496e76616c696420736c69707061676520746f6c6572616e6365000000000000\n        /* \"#utility.yul\":2992:3010   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2985:3041   */\n      mstore\n        /* \"#utility.yul\":3058:3076   */\n      0x64\n      add\n        /* \"Contracts/snipe.sol\":5380:5493  require(... */\n      tag_75\n        /* \"#utility.yul\":2732:3082   */\n      jump\n        /* \"Contracts/snipe.sol\":5380:5493  require(... */\n    tag_152:\n        /* \"Contracts/snipe.sol\":5555:5560  token */\n      sload(0x03)\n        /* \"Contracts/snipe.sol\":5555:5613  token.transferFrom(msg.sender, address(this), tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"Contracts/snipe.sol\":5574:5584  msg.sender */\n      caller\n        /* \"Contracts/snipe.sol\":5555:5613  token.transferFrom(msg.sender, address(this), tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8653:8687   */\n      mstore\n        /* \"Contracts/snipe.sol\":5594:5598  this */\n      address\n        /* \"#utility.yul\":8703:8721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8696:8739   */\n      mstore\n        /* \"#utility.yul\":8755:8773   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8748:8782   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/snipe.sol\":5555:5560  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Contracts/snipe.sol\":5555:5573  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":8588:8606   */\n      0x64\n      add\n        /* \"Contracts/snipe.sol\":5555:5613  token.transferFrom(msg.sender, address(this), tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_158:\n      pop\n        /* \"Contracts/snipe.sol\":5682:5687  token */\n      sload(0x03)\n        /* \"Contracts/snipe.sol\":5721:5725  WETH */\n      0x04\n      dup1\n      sload\n        /* \"Contracts/snipe.sol\":5682:5687  token */\n      0x01\n        /* \"Contracts/snipe.sol\":5892:5907  uniswapV3Router */\n      sload\n        /* \"Contracts/snipe.sol\":5870:5922  token.approve(address(uniswapV3Router), tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/snipe.sol\":5892:5907  uniswapV3Router */\n      swap2\n      dup3\n      and\n        /* \"Contracts/snipe.sol\":5870:5922  token.approve(address(uniswapV3Router), tokenAmount) */\n      swap4\n      dup2\n      add\n        /* \"#utility.yul\":7622:7673   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":7689:7707   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7682:7716   */\n      dup7\n      swap1\n      mstore\n        /* \"Contracts/snipe.sol\":5682:5687  token */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"Contracts/snipe.sol\":5721:5725  WETH */\n      and\n      swap1\n        /* \"Contracts/snipe.sol\":5746:5750  3000 */\n      0x0bb8\n      swap1\n        /* \"Contracts/snipe.sol\":5682:5687  token */\n      dup4\n      swap1\n        /* \"Contracts/snipe.sol\":5870:5883  token.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":7595:7613   */\n      0x44\n      add\n        /* \"Contracts/snipe.sol\":5870:5922  token.approve(address(uniswapV3Router), tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_162:\n      pop\n        /* \"Contracts/snipe.sol\":6246:6247  1 */\n      0x01\n        /* \"Contracts/snipe.sol\":6347:6362  uniswapV3Router */\n      dup1\n      sload\n        /* \"Contracts/snipe.sol\":6393:6807  ISwapRouter.ExactInputSingleParams({... */\n      0x40\n      dup1\n      mload\n        /* \"Contracts/snipe.sol\":6347:6362  uniswapV3Router */\n      0x0100\n        /* \"Contracts/snipe.sol\":6393:6807  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      dup3\n      mstore\n      dup7\n      dup2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffff\n      dup7\n      and\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"Contracts/snipe.sol\":6553:6563  msg.sender */\n      caller\n        /* \"Contracts/snipe.sol\":6393:6807  ISwapRouter.ExactInputSingleParams({... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"Contracts/snipe.sol\":6347:6362  uniswapV3Router */\n      swap2\n      and\n      swap1\n        /* \"Contracts/snipe.sol\":6347:6379  uniswapV3Router.exactInputSingle */\n      0x414bf389\n      swap1\n        /* \"Contracts/snipe.sol\":6393:6807  ISwapRouter.ExactInputSingleParams({... */\n      0x80\n      dup2\n      add\n        /* \"Contracts/snipe.sol\":6639:6660  block.timestamp + 300 */\n      tag_163\n        /* \"Contracts/snipe.sol\":6639:6654  block.timestamp */\n      timestamp\n        /* \"Contracts/snipe.sol\":6657:6660  300 */\n      0x012c\n        /* \"Contracts/snipe.sol\":6639:6660  block.timestamp + 300 */\n      tag_73\n      jump\t// in\n    tag_163:\n        /* \"Contracts/snipe.sol\":6393:6807  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/snipe.sol\":6701:6712  tokenAmount */\n      dup10\n        /* \"Contracts/snipe.sol\":6393:6807  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/snipe.sol\":6748:6754  minEth */\n      dup5\n        /* \"Contracts/snipe.sol\":6393:6807  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/snipe.sol\":6791:6792  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/snipe.sol\":6393:6807  ISwapRouter.ExactInputSingleParams({... */\n      and\n      dup2\n      mstore\n      pop\n        /* \"Contracts/snipe.sol\":6347:6817  uniswapV3Router.exactInputSingle(... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_164:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_165\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_166\n      swap2\n      dup2\n      add\n      swap1\n      tag_91\n      jump\t// in\n    tag_166:\n      0x01\n    tag_165:\n        /* \"Contracts/snipe.sol\":6335:7148  try... */\n      tag_167\n      jumpi\n      tag_96\n      tag_97\n      jump\t// in\n    tag_167:\n        /* \"Contracts/snipe.sol\":6885:6891  minEth */\n      dup2\n        /* \"Contracts/snipe.sol\":6870:6881  ethReceived */\n      dup2\n        /* \"Contracts/snipe.sol\":6870:6891  ethReceived >= minEth */\n      lt\n      iszero\n        /* \"Contracts/snipe.sol\":6862:6927  require(ethReceived >= minEth, \"Received less ETH than expected\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8995:8997   */\n      0x20\n        /* \"Contracts/snipe.sol\":6862:6927  require(ethReceived >= minEth, \"Received less ETH than expected\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8977:8998   */\n      mstore\n        /* \"#utility.yul\":9034:9036   */\n      0x1f\n        /* \"#utility.yul\":9014:9032   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9007:9037   */\n      mstore\n        /* \"#utility.yul\":9073:9106   */\n      0x5265636569766564206c65737320455448207468616e20657870656374656400\n        /* \"#utility.yul\":9053:9071   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9046:9107   */\n      mstore\n        /* \"#utility.yul\":9124:9142   */\n      0x64\n      add\n        /* \"Contracts/snipe.sol\":6862:6927  require(ethReceived >= minEth, \"Received less ETH than expected\") */\n      tag_75\n        /* \"#utility.yul\":8793:9148   */\n      jump\n        /* \"Contracts/snipe.sol\":6862:6927  require(ethReceived >= minEth, \"Received less ETH than expected\") */\n    tag_177:\n        /* \"Contracts/snipe.sol\":6943:6985  SwapTokensForETH(tokenAmount, ethReceived) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6755:6780   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":6811:6813   */\n      0x20\n        /* \"#utility.yul\":6796:6814   */\n      dup2\n      add\n        /* \"#utility.yul\":6789:6823   */\n      dup4\n      swap1\n      mstore\n        /* \"Contracts/snipe.sol\":6943:6985  SwapTokensForETH(tokenAmount, ethReceived) */\n      0xdfca204483754b2de4aca26d42e4b04ad9473e0299c6eaccfb4f8f3646ed4490\n      swap2\n        /* \"#utility.yul\":6728:6746   */\n      add\n        /* \"Contracts/snipe.sol\":6943:6985  SwapTokensForETH(tokenAmount, ethReceived) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/snipe.sol\":6822:6992  returns (uint256 ethReceived) {... */\n      pop\n        /* \"Contracts/snipe.sol\":5305:7150  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_181:\n        /* \"Contracts/snipe.sol\":5164:7150  function swapTokensForETH(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9355:9357   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9337:9358   */\n      mstore\n        /* \"#utility.yul\":9394:9396   */\n      0x1f\n        /* \"#utility.yul\":9374:9392   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9367:9397   */\n      mstore\n        /* \"#utility.yul\":9433:9466   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9413:9431   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9406:9467   */\n      mstore\n        /* \"#utility.yul\":9484:9502   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_75\n        /* \"#utility.yul\":9153:9508   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_183:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":241:421   */\n    tag_22:\n        /* \"#utility.yul\":300:306   */\n      0x00\n        /* \"#utility.yul\":353:355   */\n      0x20\n        /* \"#utility.yul\":341:350   */\n      dup3\n        /* \"#utility.yul\":332:339   */\n      dup5\n        /* \"#utility.yul\":328:351   */\n      sub\n        /* \"#utility.yul\":324:356   */\n      slt\n        /* \"#utility.yul\":321:373   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":366:367   */\n      dup1\n        /* \"#utility.yul\":359:371   */\n      revert\n        /* \"#utility.yul\":321:373   */\n    tag_191:\n      pop\n        /* \"#utility.yul\":392:415   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":241:421   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1033:1281   */\n    tag_56:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1109:1115   */\n      dup1\n        /* \"#utility.yul\":1162:1164   */\n      0x40\n        /* \"#utility.yul\":1150:1159   */\n      dup4\n        /* \"#utility.yul\":1141:1148   */\n      dup6\n        /* \"#utility.yul\":1137:1160   */\n      sub\n        /* \"#utility.yul\":1133:1165   */\n      slt\n        /* \"#utility.yul\":1130:1182   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1178:1179   */\n      0x00\n        /* \"#utility.yul\":1175:1176   */\n      dup1\n        /* \"#utility.yul\":1168:1180   */\n      revert\n        /* \"#utility.yul\":1130:1182   */\n    tag_196:\n      pop\n      pop\n        /* \"#utility.yul\":1201:1224   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1271:1273   */\n      0x20\n        /* \"#utility.yul\":1256:1274   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1243:1275   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1033:1281   */\n      jump\t// out\n        /* \"#utility.yul\":1737:1959   */\n    tag_73:\n        /* \"#utility.yul\":1802:1811   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1823:1833   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1820:1953   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1875:1885   */\n      0x4e487b71\n        /* \"#utility.yul\":1870:1873   */\n      0xe0\n        /* \"#utility.yul\":1866:1886   */\n      shl\n        /* \"#utility.yul\":1863:1864   */\n      0x00\n        /* \"#utility.yul\":1856:1887   */\n      mstore\n        /* \"#utility.yul\":1910:1914   */\n      0x11\n        /* \"#utility.yul\":1907:1908   */\n      0x04\n        /* \"#utility.yul\":1900:1915   */\n      mstore\n        /* \"#utility.yul\":1938:1942   */\n      0x24\n        /* \"#utility.yul\":1935:1936   */\n      0x00\n        /* \"#utility.yul\":1928:1943   */\n      revert\n        /* \"#utility.yul\":1820:1953   */\n    tag_200:\n        /* \"#utility.yul\":1737:1959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1964:2374   */\n    tag_76:\n        /* \"#utility.yul\":2166:2168   */\n      0x20\n        /* \"#utility.yul\":2148:2169   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2205:2207   */\n      0x2e\n        /* \"#utility.yul\":2185:2203   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2178:2208   */\n      mstore\n        /* \"#utility.yul\":2244:2278   */\n      0x54726164696e6720616c6c6f776564206f6e6c792077697468696e2074686520\n        /* \"#utility.yul\":2239:2241   */\n      0x40\n        /* \"#utility.yul\":2224:2242   */\n      dup3\n      add\n        /* \"#utility.yul\":2217:2279   */\n      mstore\n      shl(0x90, 0x74726164696e672077696e646f77)\n        /* \"#utility.yul\":2310:2312   */\n      0x60\n        /* \"#utility.yul\":2295:2313   */\n      dup3\n      add\n        /* \"#utility.yul\":2288:2332   */\n      mstore\n        /* \"#utility.yul\":2364:2367   */\n      0x80\n        /* \"#utility.yul\":2349:2368   */\n      add\n      swap1\n        /* \"#utility.yul\":1964:2374   */\n      jump\t// out\n        /* \"#utility.yul\":3087:3880   */\n    tag_88:\n        /* \"#utility.yul\":3372:3385   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3368:3390   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3350:3391   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3451:3455   */\n      0x20\n        /* \"#utility.yul\":3439:3456   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3433:3457   */\n      mload\n        /* \"#utility.yul\":3429:3462   */\n      dup3\n      and\n        /* \"#utility.yul\":3407:3427   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":3400:3463   */\n      mstore\n        /* \"#utility.yul\":3523:3527   */\n      0x40\n        /* \"#utility.yul\":3511:3528   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3505:3529   */\n      mload\n        /* \"#utility.yul\":3531:3539   */\n      0xffffff\n        /* \"#utility.yul\":3501:3540   */\n      and\n        /* \"#utility.yul\":3479:3499   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":3472:3541   */\n      mstore\n        /* \"#utility.yul\":3601:3605   */\n      0x60\n        /* \"#utility.yul\":3589:3606   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3583:3607   */\n      mload\n        /* \"#utility.yul\":3579:3612   */\n      dup3\n      and\n        /* \"#utility.yul\":3557:3577   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":3550:3613   */\n      mstore\n        /* \"#utility.yul\":3669:3673   */\n      0x80\n        /* \"#utility.yul\":3657:3674   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3651:3675   */\n      mload\n        /* \"#utility.yul\":3629:3649   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":3622:3676   */\n      mstore\n        /* \"#utility.yul\":3330:3333   */\n      0xa0\n        /* \"#utility.yul\":3720:3737   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":3714:3738   */\n      mload\n        /* \"#utility.yul\":3692:3712   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":3685:3739   */\n      mstore\n        /* \"#utility.yul\":3795:3799   */\n      0xc0\n        /* \"#utility.yul\":3783:3800   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3777:3801   */\n      mload\n        /* \"#utility.yul\":3755:3775   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":3748:3802   */\n      mstore\n        /* \"#utility.yul\":3862:3866   */\n      0xe0\n        /* \"#utility.yul\":3850:3867   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":3844:3868   */\n      mload\n        /* \"#utility.yul\":3840:3873   */\n      and\n        /* \"#utility.yul\":3818:3838   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3811:3874   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3299:3302   */\n      0x0100\n        /* \"#utility.yul\":3284:3303   */\n      add\n      swap1\n        /* \"#utility.yul\":3087:3880   */\n      jump\t// out\n        /* \"#utility.yul\":3885:4069   */\n    tag_91:\n        /* \"#utility.yul\":3955:3961   */\n      0x00\n        /* \"#utility.yul\":4008:4010   */\n      0x20\n        /* \"#utility.yul\":3996:4005   */\n      dup3\n        /* \"#utility.yul\":3987:3994   */\n      dup5\n        /* \"#utility.yul\":3983:4006   */\n      sub\n        /* \"#utility.yul\":3979:4011   */\n      slt\n        /* \"#utility.yul\":3976:4028   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":4024:4025   */\n      0x00\n        /* \"#utility.yul\":4021:4022   */\n      dup1\n        /* \"#utility.yul\":4014:4026   */\n      revert\n        /* \"#utility.yul\":3976:4028   */\n    tag_206:\n      pop\n        /* \"#utility.yul\":4047:4063   */\n      mload\n      swap2\n        /* \"#utility.yul\":3885:4069   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4074:4253   */\n    tag_97:\n        /* \"#utility.yul\":4109:4112   */\n      0x00\n        /* \"#utility.yul\":4151:4152   */\n      0x03\n        /* \"#utility.yul\":4133:4149   */\n      returndatasize\n        /* \"#utility.yul\":4130:4153   */\n      gt\n        /* \"#utility.yul\":4127:4247   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":4197:4198   */\n      0x04\n        /* \"#utility.yul\":4194:4195   */\n      0x00\n        /* \"#utility.yul\":4191:4192   */\n      dup1\n        /* \"#utility.yul\":4176:4199   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":4234:4235   */\n      0x00\n        /* \"#utility.yul\":4228:4236   */\n      mload\n        /* \"#utility.yul\":4223:4226   */\n      0xe0\n        /* \"#utility.yul\":4219:4237   */\n      shr\n        /* \"#utility.yul\":4127:4247   */\n    tag_208:\n        /* \"#utility.yul\":4074:4253   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":4258:4604   */\n    tag_187:\n        /* \"#utility.yul\":4368:4370   */\n      0x1f\n        /* \"#utility.yul\":4349:4362   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4345:4372   */\n      and\n        /* \"#utility.yul\":4333:4373   */\n      dup2\n      add\n        /* \"#utility.yul\":4403:4421   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4388:4422   */\n      dup2\n      gt\n        /* \"#utility.yul\":4424:4446   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4385:4447   */\n      or\n        /* \"#utility.yul\":4382:4567   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4489:4499   */\n      0x4e487b71\n        /* \"#utility.yul\":4484:4487   */\n      0xe0\n        /* \"#utility.yul\":4480:4500   */\n      shl\n        /* \"#utility.yul\":4477:4478   */\n      0x00\n        /* \"#utility.yul\":4470:4501   */\n      mstore\n        /* \"#utility.yul\":4524:4528   */\n      0x41\n        /* \"#utility.yul\":4521:4522   */\n      0x04\n        /* \"#utility.yul\":4514:4529   */\n      mstore\n        /* \"#utility.yul\":4552:4556   */\n      0x24\n        /* \"#utility.yul\":4549:4550   */\n      0x00\n        /* \"#utility.yul\":4542:4557   */\n      revert\n        /* \"#utility.yul\":4382:4567   */\n    tag_210:\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4576:4598   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":4258:4604   */\n      jump\t// out\n        /* \"#utility.yul\":4609:5280   */\n    tag_99:\n        /* \"#utility.yul\":4648:4651   */\n      0x00\n        /* \"#utility.yul\":4690:4694   */\n      0x44\n        /* \"#utility.yul\":4672:4688   */\n      returndatasize\n        /* \"#utility.yul\":4669:4695   */\n      lt\n        /* \"#utility.yul\":4666:4705   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":4609:5280   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":4666:4705   */\n    tag_212:\n        /* \"#utility.yul\":4732:4734   */\n      0x40\n        /* \"#utility.yul\":4726:4735   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":4797:4813   */\n      returndatasize\n        /* \"#utility.yul\":4793:4818   */\n      dup2\n      add\n        /* \"#utility.yul\":4790:4791   */\n      0x04\n        /* \"#utility.yul\":4726:4735   */\n      dup4\n        /* \"#utility.yul\":4769:4819   */\n      returndatacopy\n        /* \"#utility.yul\":4848:4852   */\n      dup2\n        /* \"#utility.yul\":4842:4853   */\n      mload\n        /* \"#utility.yul\":4872:4888   */\n      returndatasize\n        /* \"#utility.yul\":4907:4925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4978:4980   */\n      dup2\n        /* \"#utility.yul\":4971:4975   */\n      0x24\n        /* \"#utility.yul\":4963:4969   */\n      dup5\n        /* \"#utility.yul\":4959:4976   */\n      add\n        /* \"#utility.yul\":4956:4981   */\n      gt\n        /* \"#utility.yul\":4951:4953   */\n      dup2\n        /* \"#utility.yul\":4943:4949   */\n      dup5\n        /* \"#utility.yul\":4940:4954   */\n      gt\n        /* \"#utility.yul\":4937:4982   */\n      or\n        /* \"#utility.yul\":4934:4992   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":4985:4990   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4609:5280   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":4934:4992   */\n    tag_213:\n        /* \"#utility.yul\":5022:5028   */\n      dup3\n        /* \"#utility.yul\":5016:5020   */\n      dup6\n        /* \"#utility.yul\":5012:5029   */\n      add\n        /* \"#utility.yul\":5001:5029   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5061   */\n      dup2\n        /* \"#utility.yul\":5052:5062   */\n      mload\n        /* \"#utility.yul\":5085:5087   */\n      dup2\n        /* \"#utility.yul\":5077:5083   */\n      dup2\n        /* \"#utility.yul\":5074:5088   */\n      gt\n        /* \"#utility.yul\":5071:5098   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":5091:5096   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4609:5280   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5071:5098   */\n    tag_214:\n        /* \"#utility.yul\":5175:5177   */\n      dup5\n        /* \"#utility.yul\":5156:5172   */\n      returndatasize\n        /* \"#utility.yul\":5150:5154   */\n      dup8\n        /* \"#utility.yul\":5146:5173   */\n      add\n        /* \"#utility.yul\":5142:5178   */\n      add\n        /* \"#utility.yul\":5135:5139   */\n      0x20\n        /* \"#utility.yul\":5126:5132   */\n      dup3\n        /* \"#utility.yul\":5121:5124   */\n      dup6\n        /* \"#utility.yul\":5117:5133   */\n      add\n        /* \"#utility.yul\":5113:5140   */\n      add\n        /* \"#utility.yul\":5110:5179   */\n      gt\n        /* \"#utility.yul\":5107:5189   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":5182:5187   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4609:5280   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5107:5189   */\n    tag_215:\n        /* \"#utility.yul\":5198:5255   */\n      tag_216\n        /* \"#utility.yul\":5249:5253   */\n      0x20\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5232:5238   */\n      dup7\n        /* \"#utility.yul\":5228:5247   */\n      add\n        /* \"#utility.yul\":5224:5254   */\n      add\n        /* \"#utility.yul\":5218:5222   */\n      dup8\n        /* \"#utility.yul\":5198:5255   */\n      tag_187\n      jump\t// in\n    tag_216:\n      pop\n        /* \"#utility.yul\":5271:5274   */\n      swap1\n      swap6\n        /* \"#utility.yul\":4609:5280   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5285:5833   */\n    tag_102:\n        /* \"#utility.yul\":5397:5401   */\n      0x00\n        /* \"#utility.yul\":5426:5428   */\n      0x20\n        /* \"#utility.yul\":5455:5457   */\n      dup1\n        /* \"#utility.yul\":5444:5453   */\n      dup4\n        /* \"#utility.yul\":5437:5458   */\n      mstore\n        /* \"#utility.yul\":5487:5493   */\n      dup4\n        /* \"#utility.yul\":5481:5494   */\n      mload\n        /* \"#utility.yul\":5530:5536   */\n      dup1\n        /* \"#utility.yul\":5525:5527   */\n      dup3\n        /* \"#utility.yul\":5514:5523   */\n      dup6\n        /* \"#utility.yul\":5510:5528   */\n      add\n        /* \"#utility.yul\":5503:5537   */\n      mstore\n        /* \"#utility.yul\":5555:5556   */\n      0x00\n        /* \"#utility.yul\":5565:5705   */\n    tag_218:\n        /* \"#utility.yul\":5579:5585   */\n      dup2\n        /* \"#utility.yul\":5576:5577   */\n      dup2\n        /* \"#utility.yul\":5573:5586   */\n      lt\n        /* \"#utility.yul\":5565:5705   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":5674:5688   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":5670:5693   */\n      dup4\n      add\n        /* \"#utility.yul\":5664:5694   */\n      mload\n        /* \"#utility.yul\":5640:5657   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":5659:5661   */\n      0x40\n        /* \"#utility.yul\":5636:5662   */\n      add\n        /* \"#utility.yul\":5629:5695   */\n      mstore\n        /* \"#utility.yul\":5594:5604   */\n      dup3\n      add\n        /* \"#utility.yul\":5565:5705   */\n      jump(tag_218)\n    tag_220:\n        /* \"#utility.yul\":5569:5572   */\n      pop\n        /* \"#utility.yul\":5754:5755   */\n      0x00\n        /* \"#utility.yul\":5749:5751   */\n      0x40\n        /* \"#utility.yul\":5740:5746   */\n      dup3\n        /* \"#utility.yul\":5729:5738   */\n      dup7\n        /* \"#utility.yul\":5725:5747   */\n      add\n        /* \"#utility.yul\":5721:5752   */\n      add\n        /* \"#utility.yul\":5714:5756   */\n      mstore\n        /* \"#utility.yul\":5824:5826   */\n      0x40\n        /* \"#utility.yul\":5817:5819   */\n      0x1f\n        /* \"#utility.yul\":5813:5820   */\n      not\n        /* \"#utility.yul\":5808:5810   */\n      0x1f\n        /* \"#utility.yul\":5800:5806   */\n      dup4\n        /* \"#utility.yul\":5796:5811   */\n      add\n        /* \"#utility.yul\":5792:5821   */\n      and\n        /* \"#utility.yul\":5781:5790   */\n      dup6\n        /* \"#utility.yul\":5777:5822   */\n      add\n        /* \"#utility.yul\":5773:5827   */\n      add\n        /* \"#utility.yul\":5765:5827   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5285:5833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6834:7235   */\n    tag_116:\n        /* \"#utility.yul\":7036:7038   */\n      0x20\n        /* \"#utility.yul\":7018:7039   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7075:7077   */\n      0x25\n        /* \"#utility.yul\":7055:7073   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7048:7078   */\n      mstore\n        /* \"#utility.yul\":7114:7148   */\n      0x4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e\n        /* \"#utility.yul\":7109:7111   */\n      0x40\n        /* \"#utility.yul\":7094:7112   */\n      dup3\n      add\n        /* \"#utility.yul\":7087:7149   */\n      mstore\n      shl(0xd9, 0x31ba34b7b7)\n        /* \"#utility.yul\":7180:7182   */\n      0x60\n        /* \"#utility.yul\":7165:7183   */\n      dup3\n      add\n        /* \"#utility.yul\":7158:7193   */\n      mstore\n        /* \"#utility.yul\":7225:7228   */\n      0x80\n        /* \"#utility.yul\":7210:7229   */\n      add\n      swap1\n        /* \"#utility.yul\":6834:7235   */\n      jump\t// out\n        /* \"#utility.yul\":7727:8004   */\n    tag_128:\n        /* \"#utility.yul\":7794:7800   */\n      0x00\n        /* \"#utility.yul\":7847:7849   */\n      0x20\n        /* \"#utility.yul\":7835:7844   */\n      dup3\n        /* \"#utility.yul\":7826:7833   */\n      dup5\n        /* \"#utility.yul\":7822:7845   */\n      sub\n        /* \"#utility.yul\":7818:7850   */\n      slt\n        /* \"#utility.yul\":7815:7867   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":7863:7864   */\n      0x00\n        /* \"#utility.yul\":7860:7861   */\n      dup1\n        /* \"#utility.yul\":7853:7865   */\n      revert\n        /* \"#utility.yul\":7815:7867   */\n    tag_228:\n        /* \"#utility.yul\":7895:7904   */\n      dup2\n        /* \"#utility.yul\":7889:7905   */\n      mload\n        /* \"#utility.yul\":7948:7953   */\n      dup1\n        /* \"#utility.yul\":7941:7954   */\n      iszero\n        /* \"#utility.yul\":7934:7955   */\n      iszero\n        /* \"#utility.yul\":7927:7932   */\n      dup2\n        /* \"#utility.yul\":7924:7956   */\n      eq\n        /* \"#utility.yul\":7914:7974   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":7970:7971   */\n      0x00\n        /* \"#utility.yul\":7967:7968   */\n      dup1\n        /* \"#utility.yul\":7960:7972   */\n      revert\n        /* \"#utility.yul\":7914:7974   */\n    tag_229:\n        /* \"#utility.yul\":7993:7998   */\n      swap4\n        /* \"#utility.yul\":7727:8004   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206878ce8217d6e793779ba5bc04c1c461696bd3e77d7caf6cf3c8617df9e5e9ca64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_488": {
									"entryPoint": null,
									"id": 488,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_stringliteral_e4bb180dba4d4fe5a6c9482b5f0e84e34460326b375e16a729db19dc2dcc8d7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1192:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nodeType": "YulIf",
															"src": "115:70:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "362:422:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "383:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "392:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "379:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "379:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "404:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "375:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:33:7"
															},
															"nodeType": "YulIf",
															"src": "372:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "434:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "474:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "444:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "434:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "493:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "537:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "548:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "533:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "533:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "503:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:49:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "605:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "616:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "601:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "571:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:49:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "629:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "673:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "684:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "669:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "639:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:49:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "697:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "717:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "728:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "713:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "707:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:26:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "742:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "762:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "773:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "758:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "752:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "752:26:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "742:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "288:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "299:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "311:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "319:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "327:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "335:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "343:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "351:6:7",
														"type": ""
													}
												],
												"src": "196:588:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "980:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "973:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "973:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1014:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1025:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1010:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1010:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1030:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1003:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1053:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1064:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:18:7"
																	},
																	{
																		"hexValue": "54726164696e672077696e646f77206d75737420626520677265617465722074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1069:34:7",
																		"type": "",
																		"value": "Trading window must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1042:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1042:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1124:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1135:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1120:18:7"
																	},
																	{
																		"hexValue": "68616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1140:7:7",
																		"type": "",
																		"value": "han 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1113:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1113:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1157:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1169:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1180:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1165:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1165:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1157:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4bb180dba4d4fe5a6c9482b5f0e84e34460326b375e16a729db19dc2dcc8d7d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "940:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "954:4:7",
														"type": ""
													}
												],
												"src": "789:401:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_e4bb180dba4d4fe5a6c9482b5f0e84e34460326b375e16a729db19dc2dcc8d7d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Trading window must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526107086007556008805460ff1916905534801561002057600080fd5b50604051610f98380380610f9883398101604081905261003f91610122565b6001600055806100a35760405162461bcd60e51b815260206004820152602560248201527f54726164696e672077696e646f77206d75737420626520677265617465722074604482015264068616e20360dc1b606482015260840160405180910390fd5b600180546001600160a01b03199081166001600160a01b0397881617909155600280548216958716959095179094556003805485169686169690961790955560058054339085161790556004805490931691909316179055600655600755610188565b80516001600160a01b038116811461011d57600080fd5b919050565b60008060008060008060c0878903121561013b57600080fd5b61014487610106565b955061015260208801610106565b945061016060408801610106565b935061016e60608801610106565b92506080870151915060a087015190509295509295509295565b610e01806101976000396000f3fe6080604052600436106100a75760003560e01c80635b549182116100645780635b5491821461017657806365cf7c9b146101965780636e947298146101ac578063a22280a6146101bf578063ad5c4648146101df578063fc0c546a146101ff57600080fd5b80632c76d7a6146100ac5780632eab2841146100e9578063358c7660146100fe5780633ccfd60b14610122578063405d8e7414610137578063554a731d14610161575b600080fd5b3480156100b857600080fd5b506001546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f7366004610afc565b61021f565b005b34801561010a57600080fd5b5061011460075481565b6040519081526020016100e0565b34801561012e57600080fd5b506100fc6104f8565b34801561014357600080fd5b506008546101519060ff1681565b60405190151581526020016100e0565b34801561016d57600080fd5b506100fc610686565b34801561018257600080fd5b506002546100cc906001600160a01b031681565b3480156101a257600080fd5b5061011460065481565b3480156101b857600080fd5b5047610114565b3480156101cb57600080fd5b506100fc6101da366004610b15565b6106fd565b3480156101eb57600080fd5b506004546100cc906001600160a01b031681565b34801561020b57600080fd5b506003546100cc906001600160a01b031681565b610227610aa3565b6007546006546102379190610b37565b42111561025f5760405162461bcd60e51b815260040161025690610b5e565b60405180910390fd5b60085460ff16156102ad5760405162461bcd60e51b8152602060048201526018602482015277456d657267656e63792073746f702069732061637469766560401b6044820152606401610256565b6127108111156102ff5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420736c69707061676520746f6c6572616e63650000000000006044820152606401610256565b60045460035460015460408051610100810182526001600160a01b0394851680825293851660208201819052610bb892820183905230606083015234959093620a2c2a9291169063414bf3899087906080810161035e4261012c610b37565b815260200189815260200185815260200160006001600160a01b03168152506040518363ffffffff1660e01b81526004016103999190610bac565b60206040518083038185885af1935050505080156103d4575060408051601f3d908101601f191682019092526103d191810190610c15565b60015b610451576103e0610c2e565b806308c379a00361041957506103f4610c85565b806103ff575061041b565b8060405162461bcd60e51b81526004016102569190610d0f565b505b60405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0819985a5b195960aa1b6044820152606401610256565b818110156104ac5760405162461bcd60e51b815260206004820152602260248201527f5265636569766564206c65737320746f6b656e73207468616e20657870656374604482015261195960f21b6064820152608401610256565b60408051878152602081018390527f237f99c5b951562a01b6f0f161fb746ae06154df5cf173bbe71b80abae954630910160405180910390a15050505050506104f56001600055565b50565b6005546001600160a01b031633146105225760405162461bcd60e51b815260040161025690610d5d565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f9190610c15565b60035460055460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350479291169063a9059cbb906044016020604051808303816000875af11580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610da2565b506005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610648573d6000803e3d6000fd5b5060408051838152602081018390527f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8910160405180910390a15050565b6005546001600160a01b031633146106b05760405162461bcd60e51b815260040161025690610d5d565b6008805460ff8082161560ff1990921682179092556040519116151581527f691e4978574c0c1bc8adb37c112d98eb5cdd6456fe044b35cec1f4a4f3c7f60e9060200160405180910390a1565b610705610aa3565b6007546006546107159190610b37565b4211156107345760405162461bcd60e51b815260040161025690610b5e565b60085460ff16156107825760405162461bcd60e51b8152602060048201526018602482015277456d657267656e63792073746f702069732061637469766560401b6044820152606401610256565b600082116107de5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20616d6f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610256565b6127108111156108305760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420736c69707061676520746f6c6572616e63650000000000006044820152606401610256565b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ab9190610da2565b506003546004805460015460405163095ea7b360e01b81526001600160a01b039182169381019390935260248301869052928316921690610bb890839063095ea7b3906044016020604051808303816000875af1158015610910573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190610da2565b506001805460408051610100810182526001600160a01b038781168252868116602083015262ffffff86169282019290925233606082015291169063414bf38990608081016109854261012c610b37565b815260200189815260200184815260200160006001600160a01b03168152506040518263ffffffff1660e01b81526004016109c09190610bac565b6020604051808303816000875af19250505080156109fb575060408051601f3d908101601f191682019092526109f891810190610c15565b60015b610a07576103e0610c2e565b81811015610a575760405162461bcd60e51b815260206004820152601f60248201527f5265636569766564206c65737320455448207468616e206578706563746564006044820152606401610256565b60408051888152602081018390527fdfca204483754b2de4aca26d42e4b04ad9473e0299c6eaccfb4f8f3646ed4490910160405180910390a15050505050610a9f6001600055565b5050565b600260005403610af55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610256565b6002600055565b600060208284031215610b0e57600080fd5b5035919050565b60008060408385031215610b2857600080fd5b50508035926020909101359150565b80820180821115610b5857634e487b7160e01b600052601160045260246000fd5b92915050565b6020808252602e908201527f54726164696e6720616c6c6f776564206f6e6c792077697468696e207468652060408201526d74726164696e672077696e646f7760901b606082015260800190565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b600060208284031215610c2757600080fd5b5051919050565b600060033d1115610c475760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff81118282101715610c7e57634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015610c935790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715610cc357505050505090565b8285019150815181811115610cdb5750505050505090565b843d8701016020828501011115610cf55750505050505090565b610d0460208286010187610c4a565b509095945050505050565b600060208083528351808285015260005b81811015610d3c57858101830151858201604001528201610d20565b506000604082860101526040601f19601f8301168501019250505092915050565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b600060208284031215610db457600080fd5b81518015158114610dc457600080fd5b939250505056fea26469706673582212206878ce8217d6e793779ba5bc04c1c461696bd3e77d7caf6cf3c8617df9e5e9ca64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x708 PUSH1 0x7 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF98 CODESIZE SUB DUP1 PUSH2 0xF98 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3F SWAP2 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE DUP1 PUSH2 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E672077696E646F77206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND SWAP6 DUP8 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x3 DUP1 SLOAD DUP6 AND SWAP7 DUP7 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP1 SLOAD CALLER SWAP1 DUP6 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SSTORE PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH2 0x188 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 DUP8 PUSH2 0x106 JUMP JUMPDEST SWAP6 POP PUSH2 0x152 PUSH1 0x20 DUP9 ADD PUSH2 0x106 JUMP JUMPDEST SWAP5 POP PUSH2 0x160 PUSH1 0x40 DUP9 ADD PUSH2 0x106 JUMP JUMPDEST SWAP4 POP PUSH2 0x16E PUSH1 0x60 DUP9 ADD PUSH2 0x106 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0xE01 DUP1 PUSH2 0x197 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B549182 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x5B549182 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x65CF7C9B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x6E947298 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xA22280A6 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C76D7A6 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x2EAB2841 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x358C7660 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x405D8E74 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x554A731D EQ PUSH2 0x161 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x151 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x686 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x114 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x227 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x456D657267656E63792073746F7020697320616374697665 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736C69707061676520746F6C6572616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP1 DUP3 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xBB8 SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP4 ADD MSTORE CALLVALUE SWAP6 SWAP1 SWAP4 PUSH3 0xA2C2A SWAP3 SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 DUP8 SWAP1 PUSH1 0x80 DUP2 ADD PUSH2 0x35E TIMESTAMP PUSH2 0x12C PUSH2 0xB37 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x3D4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3D1 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x451 JUMPI PUSH2 0x3E0 PUSH2 0xC2E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x419 JUMPI POP PUSH2 0x3F4 PUSH2 0xC85 JUMP JUMPDEST DUP1 PUSH2 0x3FF JUMPI POP PUSH2 0x41B JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0819985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265636569766564206C65737320746F6B656E73207468616E20657870656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x237F99C5B951562A01B6F0F161FB746AE06154DF5CF173BBE71B80ABAE954630 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP PUSH2 0x4F5 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58F SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SELFBALANCE SWAP3 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x648 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH32 0x691E4978574C0C1BC8ADB37C112D98EB5CDD6456FE044B35CEC1F4A4F3C7F60E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x705 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x456D657267656E63792073746F7020697320616374697665 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736C69707061676520746F6C6572616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x887 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 DUP4 AND SWAP3 AND SWAP1 PUSH2 0xBB8 SWAP1 DUP4 SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x910 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x934 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP7 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH1 0x80 DUP2 ADD PUSH2 0x985 TIMESTAMP PUSH2 0x12C PUSH2 0xB37 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C0 SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9F8 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA07 JUMPI PUSH2 0x3E0 PUSH2 0xC2E JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265636569766564206C65737320455448207468616E20657870656374656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xDFCA204483754B2DE4ACA26D42E4B04AD9473E0299C6EACCFB4F8F3646ED4490 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP PUSH2 0xA9F PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x54726164696E6720616C6C6F776564206F6E6C792077697468696E2074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x74726164696E672077696E646F77 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xE0 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0xC93 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0xCC3 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xCDB JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCF5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xD04 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC4A JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD3C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD20 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x31BA34B7B7 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x78CE8217D6E793779B 0xA5 0xBC DIV 0xC1 0xC4 PUSH2 0x696B 0xD3 0xE7 PUSH30 0x7CAF6CF3C8617DF9E5E9CA64736F6C634300081300330000000000000000 ",
							"sourceMap": "357:7548:6:-:0;;;664:4;633:35;;688:39;;;-1:-1:-1;;688:39:6;;;1680:692;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;1926:18:6;1918:68;;;;-1:-1:-1;;;1918:68:6;;991:2:7;1918:68:6;;;973:21:7;1030:2;1010:18;;;1003:30;1069:34;1049:18;;;1042:62;-1:-1:-1;;;1120:18:7;;;1113:35;1165:19;;1918:68:6;;;;;;;;2044:15;:54;;-1:-1:-1;;;;;;2044:54:6;;;-1:-1:-1;;;;;2044:54:6;;;;;;;2108:16;:62;;;;;;;;;;;;;;2180:5;:36;;;;;;;;;;;;;;2226:5;:18;;2234:10;2226:18;;;;;;2254:4;:27;;;;;;;;;;;;2291:15;:34;2335:13;:30;357:7548;;14:177:7;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:588::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;639:49;684:2;673:9;669:18;639:49;:::i;:::-;629:59;;728:3;717:9;713:19;707:26;697:36;;773:3;762:9;758:19;752:26;742:36;;196:588;;;;;;;;:::o;789:401::-;357:7548:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH_360": {
									"entryPoint": null,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 2723,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyStopActive_370": {
									"entryPoint": null,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getETHBalance_500": {
									"entryPoint": null,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@launchTimestamp_364": {
									"entryPoint": null,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapETHForTokens_605": {
									"entryPoint": 543,
									"id": 605,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapTokensForETH_732": {
									"entryPoint": 1789,
									"id": 732,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@token_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradingWindow_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@triggerEmergencyStop_791": {
									"entryPoint": 1670,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV3Factory_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV3Router_351": {
									"entryPoint": null,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_776": {
									"entryPoint": 1272,
									"id": 776,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Minimal_$125__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$225__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV3Factory_$308__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IWETH9_$325__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_179799c46f636fb7268f34ab3b1b94bc88b91aaeefb7ef2027cbcce0bd669c69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_206bbb96e38086280d4c776d7a338c6b0f878bbe1188137fd9a4d00b314a92be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24063e7b66b6ab0a6213e512791c8ba5438913281504a1fb2c262824fb6804e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2832013d0cfc63f8f845987cb73302ef839a7f2bf379320e184d35a891b049d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43ac8f3b7e8afde94692fc4b746bc65b2127027ea871813b79f777ad7971d4ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2e00703539f3f04fd06fb801f3cd19fa6ef510237114985f6005a888dc270d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$149_memory_ptr__to_t_struct$_ExactInputSingleParams_$149_memory_ptr__fromStack_reversed": {
									"entryPoint": 2988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 3118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9510:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "134:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "144:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "156:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "167:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "152:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "152:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "144:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "186:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "201:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "217:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "222:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "213:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "213:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "226:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "209:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "209:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "197:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "197:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "179:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "179:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$225__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "103:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "114:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "125:4:7",
														"type": ""
													}
												],
												"src": "14:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "311:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "353:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "324:32:7"
															},
															"nodeType": "YulIf",
															"src": "321:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "382:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "392:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "277:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "288:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "300:6:7",
														"type": ""
													}
												],
												"src": "241:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "537:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "549:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "560:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "545:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "537:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "579:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "590:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "572:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "572:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "572:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "496:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "507:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "518:4:7",
														"type": ""
													}
												],
												"src": "426:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "713:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "725:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "721:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "721:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "713:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "755:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "780:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "773:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "766:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "748:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "748:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "672:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "683:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "694:4:7",
														"type": ""
													}
												],
												"src": "608:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "926:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "936:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "959:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "944:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "936:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "978:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "993:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1009:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1014:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1005:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1005:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1018:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1001:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "989:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "971:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "971:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV3Factory_$308__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "895:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "906:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "917:4:7",
														"type": ""
													}
												],
												"src": "800:228:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1120:161:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1166:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1175:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1178:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1168:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1168:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1162:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:32:7"
															},
															"nodeType": "YulIf",
															"src": "1130:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1191:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1214:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1201:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1233:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1260:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1271:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1256:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1256:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1243:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1109:6:7",
														"type": ""
													}
												],
												"src": "1033:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1401:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1411:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1423:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1419:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1411:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1453:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1468:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1484:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1489:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1480:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1480:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1493:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1476:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1476:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1464:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1464:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1446:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1446:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IWETH9_$325__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1381:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1392:4:7",
														"type": ""
													}
												],
												"src": "1286:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1630:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1640:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1652:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1648:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1640:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1682:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1697:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1713:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1718:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1709:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1709:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1722:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1705:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1705:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1693:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1693:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1675:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Minimal_$125__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1599:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1610:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1621:4:7",
														"type": ""
													}
												],
												"src": "1508:224:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:174:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1806:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1809:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1795:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1842:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1863:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1870:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1875:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1866:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1866:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1856:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1856:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1907:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1910:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1935:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1938:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1928:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1928:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1928:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1826:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1829:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1823:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:10:7"
															},
															"nodeType": "YulIf",
															"src": "1820:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1768:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1771:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1777:3:7",
														"type": ""
													}
												],
												"src": "1737:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:236:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2155:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2166:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2148:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2148:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2189:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2200:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2185:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:7",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2178:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2178:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2178:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2228:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2239:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2224:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2224:18:7"
																	},
																	{
																		"hexValue": "54726164696e6720616c6c6f776564206f6e6c792077697468696e2074686520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2244:34:7",
																		"type": "",
																		"value": "Trading allowed only within the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2217:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2299:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2310:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2295:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2295:18:7"
																	},
																	{
																		"hexValue": "74726164696e672077696e646f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2315:16:7",
																		"type": "",
																		"value": "trading window"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2288:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2288:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2341:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2353:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2364:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2349:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2349:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2341:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_206bbb96e38086280d4c776d7a338c6b0f878bbe1188137fd9a4d00b314a92be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2115:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2129:4:7",
														"type": ""
													}
												],
												"src": "1964:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:174:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2570:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2581:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2563:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2563:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2563:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2604:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2615:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2600:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2600:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2620:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2593:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2643:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2654:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:18:7"
																	},
																	{
																		"hexValue": "456d657267656e63792073746f7020697320616374697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2659:26:7",
																		"type": "",
																		"value": "Emergency stop is active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2632:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2632:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2632:54:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2695:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2707:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2718:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2695:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43ac8f3b7e8afde94692fc4b746bc65b2127027ea871813b79f777ad7971d4ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2530:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2544:4:7",
														"type": ""
													}
												],
												"src": "2379:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2906:176:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2923:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2916:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2957:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2968:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2953:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2973:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2946:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2946:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2946:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2996:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3007:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2992:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2992:18:7"
																	},
																	{
																		"hexValue": "496e76616c696420736c69707061676520746f6c6572616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3012:28:7",
																		"type": "",
																		"value": "Invalid slippage tolerance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2985:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:56:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2985:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3050:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3062:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3073:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3050:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24063e7b66b6ab0a6213e512791c8ba5438913281504a1fb2c262824fb6804e3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2883:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2897:4:7",
														"type": ""
													}
												],
												"src": "2732:350:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:614:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3276:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3288:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3299:3:7",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3284:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3276:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3312:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3330:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3335:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3339:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3316:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3357:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3378:6:7"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3372:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3372:13:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3387:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3368:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3368:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3350:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3411:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3422:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3407:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3407:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "3443:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3451:4:7",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3439:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3439:17:7"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3433:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3433:24:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3459:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:33:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3400:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:63:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3400:63:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3483:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3494:4:7",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3479:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3479:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "3515:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3523:4:7",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3511:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3511:17:7"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3505:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3505:24:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3531:8:7",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3501:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3501:39:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3472:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:69:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3472:69:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3572:4:7",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "3593:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3601:4:7",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3589:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3589:17:7"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3583:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3583:24:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3609:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:33:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:63:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3550:63:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3644:4:7",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3661:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3669:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3657:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3657:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3651:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3651:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3696:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3707:4:7",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3724:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3732:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3720:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3720:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3714:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3714:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3759:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3770:4:7",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3755:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3755:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3787:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3795:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3783:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3783:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3777:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3777:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3748:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3748:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3748:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3822:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3833:4:7",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3818:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3818:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "3854:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3862:4:7",
																								"type": "",
																								"value": "0xe0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3850:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3850:17:7"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3844:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3844:24:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3870:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3840:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3840:33:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3811:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3811:63:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3811:63:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$149_memory_ptr__to_t_struct$_ExactInputSingleParams_$149_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3235:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3246:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3257:4:7",
														"type": ""
													}
												],
												"src": "3087:793:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3966:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4012:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4021:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4024:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4014:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4014:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4014:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3987:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:32:7"
															},
															"nodeType": "YulIf",
															"src": "3976:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4037:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4053:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4047:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4037:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3932:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3943:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3955:6:7",
														"type": ""
													}
												],
												"src": "3885:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4117:136:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4162:85:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4191:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4194:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4197:1:7",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "4176:14:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4176:23:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4176:23:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4212:25:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4223:3:7",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4234:1:7",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4228:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "4219:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4219:18:7"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "4212:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "4133:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4133:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:1:7",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4130:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:23:7"
															},
															"nodeType": "YulIf",
															"src": "4127:120:7"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "4109:3:7",
														"type": ""
													}
												],
												"src": "4074:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4305:299:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4315:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4337:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "4353:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4359:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4349:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4349:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4368:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4364:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4345:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4345:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4333:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4319:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4456:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4477:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4484:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4489:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4480:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4480:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4470:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4470:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4470:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4521:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4524:4:7",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4514:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4514:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4514:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4549:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4552:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4542:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4542:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4542:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4391:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4403:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4388:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4388:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4427:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4439:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4424:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4424:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4385:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:62:7"
															},
															"nodeType": "YulIf",
															"src": "4382:185:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4587:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4576:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4576:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4287:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4295:4:7",
														"type": ""
													}
												],
												"src": "4258:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4656:624:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4696:9:7",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "4698:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "4672:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4672:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4690:4:7",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4669:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4669:26:7"
															},
															"nodeType": "YulIf",
															"src": "4666:39:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4714:21:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4726:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4726:9:7"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "4718:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4744:16:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4758:1:7",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4754:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:6:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4748:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4784:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "4797:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4797:16:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4815:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4793:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4793:25:7"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4769:14:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4769:50:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4769:50:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4828:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4848:4:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4842:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:11:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4832:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4862:26:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "4872:14:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4872:16:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4866:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4897:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4907:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4901:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4983:9:7",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "4985:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4943:6:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4951:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4940:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4940:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4971:4:7",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4959:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4959:17:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4978:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4956:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4956:25:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4937:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:45:7"
															},
															"nodeType": "YulIf",
															"src": "4934:58:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5001:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5016:4:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5022:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5012:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:17:7"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "5005:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5038:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "5058:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5052:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:10:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5042:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5089:9:7",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "5091:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5077:6:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5085:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5074:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5074:14:7"
															},
															"nodeType": "YulIf",
															"src": "5071:27:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5180:9:7",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "5182:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "5121:3:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5126:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5117:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5117:16:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5135:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5113:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5113:27:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "5150:4:7"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "5156:14:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5156:16:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5146:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5146:27:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5175:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5142:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5142:36:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5110:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5110:69:7"
															},
															"nodeType": "YulIf",
															"src": "5107:82:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5218:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5232:6:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5228:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5228:19:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5249:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5224:30:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5198:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5264:10:7",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "5271:3:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:7"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4648:3:7",
														"type": ""
													}
												],
												"src": "4609:671:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5406:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5416:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5426:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5420:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5444:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5455:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5437:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5437:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5437:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5467:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5487:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5481:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5471:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5514:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5525:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5510:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5510:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5530:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5503:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5503:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5546:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5555:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5550:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5615:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "5644:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5655:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5640:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5640:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5659:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5636:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5636:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "5678:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "5686:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5674:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5674:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "5690:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5670:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5670:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5664:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5664:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5629:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5576:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5579:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5573:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5587:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5589:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5598:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5601:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5594:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5594:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5589:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5569:3:7",
																"statements": []
															},
															"src": "5565:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5729:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5740:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5725:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5725:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5749:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5721:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5721:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5754:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5714:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5714:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5714:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5765:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5781:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5800:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5808:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5796:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5796:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5817:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5813:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5813:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5792:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5792:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5777:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5777:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5824:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5773:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5765:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5375:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5386:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5397:4:7",
														"type": ""
													}
												],
												"src": "5285:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6012:161:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6029:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6040:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6022:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6022:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6022:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6063:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6074:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6059:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6059:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:2:7",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6052:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6052:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6102:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6113:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6098:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6098:18:7"
																	},
																	{
																		"hexValue": "53776170206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6118:13:7",
																		"type": "",
																		"value": "Swap failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6091:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6091:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6091:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6141:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6153:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6164:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6149:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6149:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6141:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_179799c46f636fb7268f34ab3b1b94bc88b91aaeefb7ef2027cbcce0bd669c69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5989:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6003:4:7",
														"type": ""
													}
												],
												"src": "5838:335:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6352:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6369:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6380:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6362:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6403:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6414:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6399:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6419:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6392:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6392:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6442:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6453:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6438:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6438:18:7"
																	},
																	{
																		"hexValue": "5265636569766564206c65737320746f6b656e73207468616e20657870656374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6458:34:7",
																		"type": "",
																		"value": "Received less tokens than expect"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6431:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6431:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6513:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6524:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6509:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6509:18:7"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6529:4:7",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6502:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6502:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6543:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6555:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6566:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6551:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6543:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2e00703539f3f04fd06fb801f3cd19fa6ef510237114985f6005a888dc270d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6329:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6343:4:7",
														"type": ""
													}
												],
												"src": "6178:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6710:119:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6720:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6732:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6743:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6728:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6728:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6720:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6762:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6773:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6755:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6755:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6755:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6800:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6811:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6796:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6796:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6816:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6789:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6789:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6671:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6682:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6690:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6701:4:7",
														"type": ""
													}
												],
												"src": "6581:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7008:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7025:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7036:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7018:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7018:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7059:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7070:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7055:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7055:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7075:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7048:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7048:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7048:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7109:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7094:18:7"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7114:34:7",
																		"type": "",
																		"value": "Only the owner can call this fun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7087:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7087:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7087:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7169:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7180:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7165:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7165:18:7"
																	},
																	{
																		"hexValue": "6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7185:7:7",
																		"type": "",
																		"value": "ction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7158:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7158:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7158:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7202:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7214:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7225:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7210:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7202:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6985:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6999:4:7",
														"type": ""
													}
												],
												"src": "6834:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7341:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7351:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7363:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7374:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7359:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7359:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7351:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7393:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7408:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7424:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7429:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7420:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7420:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7433:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7416:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7416:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7404:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7404:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7386:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7386:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7310:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7321:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7332:4:7",
														"type": ""
													}
												],
												"src": "7240:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7577:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7587:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7599:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7610:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7587:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7629:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7644:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7660:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7665:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7656:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7656:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7669:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7652:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7652:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7640:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7640:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7693:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7704:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7689:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7689:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7709:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7682:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7682:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7682:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7538:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7549:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7557:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7568:4:7",
														"type": ""
													}
												],
												"src": "7448:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7805:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7851:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7860:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7863:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7853:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7853:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7853:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7826:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7835:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7822:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7822:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7847:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7818:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7818:32:7"
															},
															"nodeType": "YulIf",
															"src": "7815:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7876:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7895:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7889:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7880:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7958:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7967:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7970:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7960:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7960:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7960:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7927:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7948:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7941:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7941:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7934:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7934:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7924:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7924:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7917:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7917:40:7"
															},
															"nodeType": "YulIf",
															"src": "7914:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7983:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7993:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7771:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7782:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7794:6:7",
														"type": ""
													}
												],
												"src": "7727:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8183:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8200:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8211:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8193:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8193:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8234:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8245:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8250:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8223:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8223:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8273:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8284:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8269:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8269:18:7"
																	},
																	{
																		"hexValue": "546f6b656e20616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8289:34:7",
																		"type": "",
																		"value": "Token amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8262:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8262:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8344:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8355:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8340:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8340:18:7"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8360:5:7",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8333:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8333:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8375:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8387:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8398:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8383:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8383:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8375:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8160:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8174:4:7",
														"type": ""
													}
												],
												"src": "8009:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8570:218:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8580:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8592:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8603:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8588:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8588:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8580:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8615:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8633:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8638:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8629:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8629:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8642:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8625:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8625:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8619:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8660:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8675:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8683:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8671:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8671:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8653:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8653:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8727:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8735:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8723:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8723:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8696:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8759:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8770:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8755:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8755:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8775:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8748:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8748:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8523:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8534:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8542:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8550:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8561:4:7",
														"type": ""
													}
												],
												"src": "8413:375:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8967:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8984:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8995:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8977:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8977:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8977:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9018:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9029:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9014:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9014:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9034:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9007:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9007:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9007:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9057:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9068:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9053:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9053:18:7"
																	},
																	{
																		"hexValue": "5265636569766564206c65737320455448207468616e206578706563746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9073:33:7",
																		"type": "",
																		"value": "Received less ETH than expected"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9046:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9046:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9046:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9116:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9128:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9139:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9124:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9116:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2832013d0cfc63f8f845987cb73302ef839a7f2bf379320e184d35a891b049d0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8944:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8958:4:7",
														"type": ""
													}
												],
												"src": "8793:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9327:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9344:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9378:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9389:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9374:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9374:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9394:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9367:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9367:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9367:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9417:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9428:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9413:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9413:18:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9433:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9406:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9406:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9406:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9476:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9488:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9499:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9484:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9484:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9476:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9304:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9318:4:7",
														"type": ""
													}
												],
												"src": "9153:355:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_ISwapRouter_$225__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV3Factory_$308__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IWETH9_$325__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Minimal_$125__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_206bbb96e38086280d4c776d7a338c6b0f878bbe1188137fd9a4d00b314a92be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Trading allowed only within the \")\n        mstore(add(headStart, 96), \"trading window\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_43ac8f3b7e8afde94692fc4b746bc65b2127027ea871813b79f777ad7971d4ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Emergency stop is active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_24063e7b66b6ab0a6213e512791c8ba5438913281504a1fb2c262824fb6804e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid slippage tolerance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$149_memory_ptr__to_t_struct$_ExactInputSingleParams_$149_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffff))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), and(mload(add(value0, 0xe0)), _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_179799c46f636fb7268f34ab3b1b94bc88b91aaeefb7ef2027cbcce0bd669c69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Swap failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2e00703539f3f04fd06fb801f3cd19fa6ef510237114985f6005a888dc270d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Received less tokens than expect\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Only the owner can call this fun\")\n        mstore(add(headStart, 96), \"ction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token amount must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_2832013d0cfc63f8f845987cb73302ef839a7f2bf379320e184d35a891b049d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Received less ETH than expected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a75760003560e01c80635b549182116100645780635b5491821461017657806365cf7c9b146101965780636e947298146101ac578063a22280a6146101bf578063ad5c4648146101df578063fc0c546a146101ff57600080fd5b80632c76d7a6146100ac5780632eab2841146100e9578063358c7660146100fe5780633ccfd60b14610122578063405d8e7414610137578063554a731d14610161575b600080fd5b3480156100b857600080fd5b506001546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f7366004610afc565b61021f565b005b34801561010a57600080fd5b5061011460075481565b6040519081526020016100e0565b34801561012e57600080fd5b506100fc6104f8565b34801561014357600080fd5b506008546101519060ff1681565b60405190151581526020016100e0565b34801561016d57600080fd5b506100fc610686565b34801561018257600080fd5b506002546100cc906001600160a01b031681565b3480156101a257600080fd5b5061011460065481565b3480156101b857600080fd5b5047610114565b3480156101cb57600080fd5b506100fc6101da366004610b15565b6106fd565b3480156101eb57600080fd5b506004546100cc906001600160a01b031681565b34801561020b57600080fd5b506003546100cc906001600160a01b031681565b610227610aa3565b6007546006546102379190610b37565b42111561025f5760405162461bcd60e51b815260040161025690610b5e565b60405180910390fd5b60085460ff16156102ad5760405162461bcd60e51b8152602060048201526018602482015277456d657267656e63792073746f702069732061637469766560401b6044820152606401610256565b6127108111156102ff5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420736c69707061676520746f6c6572616e63650000000000006044820152606401610256565b60045460035460015460408051610100810182526001600160a01b0394851680825293851660208201819052610bb892820183905230606083015234959093620a2c2a9291169063414bf3899087906080810161035e4261012c610b37565b815260200189815260200185815260200160006001600160a01b03168152506040518363ffffffff1660e01b81526004016103999190610bac565b60206040518083038185885af1935050505080156103d4575060408051601f3d908101601f191682019092526103d191810190610c15565b60015b610451576103e0610c2e565b806308c379a00361041957506103f4610c85565b806103ff575061041b565b8060405162461bcd60e51b81526004016102569190610d0f565b505b60405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0819985a5b195960aa1b6044820152606401610256565b818110156104ac5760405162461bcd60e51b815260206004820152602260248201527f5265636569766564206c65737320746f6b656e73207468616e20657870656374604482015261195960f21b6064820152608401610256565b60408051878152602081018390527f237f99c5b951562a01b6f0f161fb746ae06154df5cf173bbe71b80abae954630910160405180910390a15050505050506104f56001600055565b50565b6005546001600160a01b031633146105225760405162461bcd60e51b815260040161025690610d5d565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f9190610c15565b60035460055460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350479291169063a9059cbb906044016020604051808303816000875af11580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610da2565b506005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610648573d6000803e3d6000fd5b5060408051838152602081018390527f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8910160405180910390a15050565b6005546001600160a01b031633146106b05760405162461bcd60e51b815260040161025690610d5d565b6008805460ff8082161560ff1990921682179092556040519116151581527f691e4978574c0c1bc8adb37c112d98eb5cdd6456fe044b35cec1f4a4f3c7f60e9060200160405180910390a1565b610705610aa3565b6007546006546107159190610b37565b4211156107345760405162461bcd60e51b815260040161025690610b5e565b60085460ff16156107825760405162461bcd60e51b8152602060048201526018602482015277456d657267656e63792073746f702069732061637469766560401b6044820152606401610256565b600082116107de5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20616d6f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610256565b6127108111156108305760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420736c69707061676520746f6c6572616e63650000000000006044820152606401610256565b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ab9190610da2565b506003546004805460015460405163095ea7b360e01b81526001600160a01b039182169381019390935260248301869052928316921690610bb890839063095ea7b3906044016020604051808303816000875af1158015610910573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190610da2565b506001805460408051610100810182526001600160a01b038781168252868116602083015262ffffff86169282019290925233606082015291169063414bf38990608081016109854261012c610b37565b815260200189815260200184815260200160006001600160a01b03168152506040518263ffffffff1660e01b81526004016109c09190610bac565b6020604051808303816000875af19250505080156109fb575060408051601f3d908101601f191682019092526109f891810190610c15565b60015b610a07576103e0610c2e565b81811015610a575760405162461bcd60e51b815260206004820152601f60248201527f5265636569766564206c65737320455448207468616e206578706563746564006044820152606401610256565b60408051888152602081018390527fdfca204483754b2de4aca26d42e4b04ad9473e0299c6eaccfb4f8f3646ed4490910160405180910390a15050505050610a9f6001600055565b5050565b600260005403610af55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610256565b6002600055565b600060208284031215610b0e57600080fd5b5035919050565b60008060408385031215610b2857600080fd5b50508035926020909101359150565b80820180821115610b5857634e487b7160e01b600052601160045260246000fd5b92915050565b6020808252602e908201527f54726164696e6720616c6c6f776564206f6e6c792077697468696e207468652060408201526d74726164696e672077696e646f7760901b606082015260800190565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b600060208284031215610c2757600080fd5b5051919050565b600060033d1115610c475760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff81118282101715610c7e57634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015610c935790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715610cc357505050505090565b8285019150815181811115610cdb5750505050505090565b843d8701016020828501011115610cf55750505050505090565b610d0460208286010187610c4a565b509095945050505050565b600060208083528351808285015260005b81811015610d3c57858101830151858201604001528201610d20565b506000604082860101526040601f19601f8301168501019250505092915050565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b600060208284031215610db457600080fd5b81518015158114610dc457600080fd5b939250505056fea26469706673582212206878ce8217d6e793779ba5bc04c1c461696bd3e77d7caf6cf3c8617df9e5e9ca64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B549182 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x5B549182 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x65CF7C9B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x6E947298 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xA22280A6 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C76D7A6 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x2EAB2841 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x358C7660 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x405D8E74 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x554A731D EQ PUSH2 0x161 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x151 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x686 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x114 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x227 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x456D657267656E63792073746F7020697320616374697665 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736C69707061676520746F6C6572616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP1 DUP3 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xBB8 SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP4 ADD MSTORE CALLVALUE SWAP6 SWAP1 SWAP4 PUSH3 0xA2C2A SWAP3 SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 DUP8 SWAP1 PUSH1 0x80 DUP2 ADD PUSH2 0x35E TIMESTAMP PUSH2 0x12C PUSH2 0xB37 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x3D4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3D1 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x451 JUMPI PUSH2 0x3E0 PUSH2 0xC2E JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x419 JUMPI POP PUSH2 0x3F4 PUSH2 0xC85 JUMP JUMPDEST DUP1 PUSH2 0x3FF JUMPI POP PUSH2 0x41B JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0819985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265636569766564206C65737320746F6B656E73207468616E20657870656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x237F99C5B951562A01B6F0F161FB746AE06154DF5CF173BBE71B80ABAE954630 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP PUSH2 0x4F5 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58F SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SELFBALANCE SWAP3 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x648 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH32 0x691E4978574C0C1BC8ADB37C112D98EB5CDD6456FE044B35CEC1F4A4F3C7F60E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x705 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x456D657267656E63792073746F7020697320616374697665 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736C69707061676520746F6C6572616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x887 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 DUP4 AND SWAP3 AND SWAP1 PUSH2 0xBB8 SWAP1 DUP4 SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x910 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x934 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP7 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH1 0x80 DUP2 ADD PUSH2 0x985 TIMESTAMP PUSH2 0x12C PUSH2 0xB37 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C0 SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9F8 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA07 JUMPI PUSH2 0x3E0 PUSH2 0xC2E JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265636569766564206C65737320455448207468616E20657870656374656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xDFCA204483754B2DE4ACA26D42E4B04AD9473E0299C6EACCFB4F8F3646ED4490 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP PUSH2 0xA9F PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x54726164696E6720616C6C6F776564206F6E6C792077697468696E2074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x74726164696E672077696E646F77 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xE0 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0xC93 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0xCC3 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xCDB JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCF5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xD04 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC4A JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD3C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD20 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x31BA34B7B7 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x78CE8217D6E793779B 0xA5 0xBC DIV 0xC1 0xC4 PUSH2 0x696B 0xD3 0xE7 PUSH30 0x7CAF6CF3C8617DF9E5E9CA64736F6C634300081300330000000000000000 ",
							"sourceMap": "357:7548:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;427:34;;;;;;;;;;-1:-1:-1;427:34:6;;;;-1:-1:-1;;;;;427:34:6;;;;;;-1:-1:-1;;;;;197:32:7;;;179:51;;167:2;152:18;427:34:6;;;;;;;;3235:1859;;;;;;:::i;:::-;;:::i;:::-;;633:35;;;;;;;;;;;;;;;;;;;572:25:7;;;560:2;545:18;633:35:6;426:177:7;7205:417:6;;;;;;;;;;;;;:::i;688:39::-;;;;;;;;;;-1:-1:-1;688:39:6;;;;;;;;;;;773:14:7;;766:22;748:41;;736:2;721:18;688:39:6;608:187:7;7670:233:6;;;;;;;;;;;;;:::i;467:41::-;;;;;;;;;;-1:-1:-1;467:41:6;;;;-1:-1:-1;;;;;467:41:6;;;597:30;;;;;;;;;;;;;;;;2433:100;;;;;;;;;;-1:-1:-1;2505:21:6;2433:100;;5164:1986;;;;;;;;;;-1:-1:-1;5164:1986:6;;;;;:::i;:::-;;:::i;546:18::-;;;;;;;;;;-1:-1:-1;546:18:6;;;;-1:-1:-1;;;;;546:18:6;;;514:26;;;;;;;;;;-1:-1:-1;514:26:6;;;;-1:-1:-1;;;;;514:26:6;;;3235:1859;2261:21:0;:19;:21::i;:::-;1377:13:6::1;;1359:15;;:31;;;;:::i;:::-;1340:15;:50;;1319:143;;;;-1:-1:-1::0;;;1319:143:6::1;;;;;;;:::i;:::-;;;;;;;;;1582:19:::2;::::0;::::2;;1581:20;1573:57;;;::::0;-1:-1:-1;;;1573:57:6;;2581:2:7;1573:57:6::2;::::0;::::2;2563:21:7::0;2620:2;2600:18;;;2593:30;-1:-1:-1;;;2639:18:7;;;2632:54;2703:18;;1573:57:6::2;2379:348:7::0;1573:57:6::2;3445:5:::3;3424:17;:26;;3377:125;;;::::0;-1:-1:-1;;;3377:125:6;;2934:2:7;3377:125:6::3;::::0;::::3;2916:21:7::0;2973:2;2953:18;;;2946:30;3012:28;2992:18;;;2985:56;3058:18;;3377:125:6::3;2732:350:7::0;3377:125:6::3;3619:4;::::0;3719:5:::3;::::0;3619:4;4270:15;4334:370:::3;::::0;;3619:4:::3;4334:370:::0;::::3;::::0;;-1:-1:-1;;;;;3619:4:6;;::::3;4334:370:::0;;;3719:5;;::::3;4334:370;::::0;::::3;::::0;;;3749:4:::3;4334:370:::0;;;;;;4502:4:::3;4334:370:::0;;;;3533:9:::3;::::0;3719:5;;4163:6:::3;::::0;4270:15;::::3;::::0;:32:::3;::::0;3533:9;;4334:370;;;4535:21:::3;:15;4553:3;4535:21;:::i;:::-;4334:370;;;;4597:9;4334:370;;;;4642:9;4334:370;;;;4688:1;-1:-1:-1::0;;;;;4334:370:6::3;;;::::0;4270:444:::3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;4270:444:6::3;::::0;;::::3;;::::0;;::::3;-1:-1:-1::0;;4270:444:6::3;::::0;::::3;::::0;;;::::3;::::0;;::::3;::::0;::::3;:::i;:::-;;;4258:834;;;;:::i;:::-;;;::::0;::::3;;;;;:::i;:::-;;;;;;;;5033:6;5026:14;;-1:-1:-1::0;;;5026:14:6::3;;;;;;;;:::i;4258:834::-;;;5064:21;::::0;-1:-1:-1;;;5064:21:6;;6040:2:7;5064:21:6::3;::::0;::::3;6022::7::0;6079:2;6059:18;;;6052:30;-1:-1:-1;;;6098:18:7;;;6091:41;6149:18;;5064:21:6::3;5838:335:7::0;4258:834:6::3;4801:9;4783:14;:27;;4762:108;;;::::0;-1:-1:-1;;;4762:108:6;;6380:2:7;4762:108:6::3;::::0;::::3;6362:21:7::0;6419:2;6399:18;;;6392:30;6458:34;6438:18;;;6431:62;-1:-1:-1;;;6509:18:7;;;6502:32;6551:19;;4762:108:6::3;6178:398:7::0;4762:108:6::3;4886:43;::::0;;6755:25:7;;;6811:2;6796:18;;6789:34;;;4886:43:6::3;::::0;6728:18:7;4886:43:6::3;;;;;;;4719:217;3367:1727;;;;;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;3235:1859:6;:::o;7205:417::-;1139:5;;-1:-1:-1;;;;;1139:5:6;1125:10;:19;1117:69;;;;-1:-1:-1;;;1117:69:6;;;;;;;:::i;:::-;7318:5:::1;::::0;:30:::1;::::0;-1:-1:-1;;;7318:30:6;;7342:4:::1;7318:30;::::0;::::1;179:51:7::0;7295:20:6::1;::::0;-1:-1:-1;;;;;7318:5:6::1;::::0;:15:::1;::::0;152:18:7;;7318:30:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7463:5;::::0;7478::::1;::::0;7463:35:::1;::::0;-1:-1:-1;;;7463:35:6;;-1:-1:-1;;;;;7478:5:6;;::::1;7463:35;::::0;::::1;7622:51:7::0;7689:18;;;7682:34;;;7295:53:6;;-1:-1:-1;7379:21:6::1;::::0;7463:5;::::1;::::0;:14:::1;::::0;7595:18:7;;7463:35:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7516:5:6::1;::::0;7508:35:::1;::::0;-1:-1:-1;;;;;7516:5:6;;::::1;::::0;7508:35;::::1;;;::::0;7532:10;;7516:5:::1;7508:35:::0;7516:5;7508:35;7532:10;7516:5;7508:35;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;7581:34:6::1;::::0;;6755:25:7;;;6811:2;6796:18;;6789:34;;;7581::6::1;::::0;6728:18:7;7581:34:6::1;;;;;;;7242:380;;7205:417::o:0;7670:233::-;1139:5;;-1:-1:-1;;;;;1139:5:6;1125:10;:19;1117:69;;;;-1:-1:-1;;;1117:69:6;;;;;;;:::i;:::-;7796:19:::1;::::0;;::::1;::::0;;::::1;7795:20;-1:-1:-1::0;;7773:42:6;;::::1;::::0;::::1;::::0;;;7853:43:::1;::::0;7876:19;;773:14:7;766:22;748:41;;7853:43:6::1;::::0;736:2:7;721:18;7853:43:6::1;;;;;;;7670:233::o:0;5164:1986::-;2261:21:0;:19;:21::i;:::-;1377:13:6::1;;1359:15;;:31;;;;:::i;:::-;1340:15;:50;;1319:143;;;;-1:-1:-1::0;;;1319:143:6::1;;;;;;;:::i;:::-;1582:19:::2;::::0;::::2;;1581:20;1573:57;;;::::0;-1:-1:-1;;;1573:57:6;;2581:2:7;1573:57:6::2;::::0;::::2;2563:21:7::0;2620:2;2600:18;;;2593:30;-1:-1:-1;;;2639:18:7;;;2632:54;2703:18;;1573:57:6::2;2379:348:7::0;1573:57:6::2;5333:1:::3;5319:11;:15;5311:63;;;::::0;-1:-1:-1;;;5311:63:6;;8211:2:7;5311:63:6::3;::::0;::::3;8193:21:7::0;8250:2;8230:18;;;8223:30;8289:34;8269:18;;;8262:62;-1:-1:-1;;;8340:18:7;;;8333:33;8383:19;;5311:63:6::3;8009:399:7::0;5311:63:6::3;5444:5;5423:17;:26;;5380:113;;;::::0;-1:-1:-1;;;5380:113:6;;2934:2:7;5380:113:6::3;::::0;::::3;2916:21:7::0;2973:2;2953:18;;;2946:30;3012:28;2992:18;;;2985:56;3058:18;;5380:113:6::3;2732:350:7::0;5380:113:6::3;5555:5;::::0;:58:::3;::::0;-1:-1:-1;;;5555:58:6;;5574:10:::3;5555:58;::::0;::::3;8653:34:7::0;5594:4:6::3;8703:18:7::0;;;8696:43;8755:18;;;8748:34;;;-1:-1:-1;;;;;5555:5:6;;::::3;::::0;:18:::3;::::0;8588::7;;5555:58:6::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5682:5:6::3;::::0;5721:4:::3;::::0;;5682:5;5892:15;5870:52:::3;::::0;-1:-1:-1;;;5870:52:6;;-1:-1:-1;;;;;5892:15:6;;::::3;5870:52:::0;;::::3;7622:51:7::0;;;;7689:18;;;7682:34;;;5682:5:6;;::::3;::::0;5721:4:::3;::::0;5746::::3;::::0;5682:5;;5870:13:::3;::::0;7595:18:7;;5870:52:6::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6246:1:6::3;6347:15:::0;;6393:414:::3;::::0;;6347:15:::3;6393:414:::0;::::3;::::0;;-1:-1:-1;;;;;6393:414:6;;::::3;::::0;;;;::::3;;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;;;;;;6553:10:::3;6393:414:::0;;;;6347:15;::::3;::::0;:32:::3;::::0;6393:414;;;6639:21:::3;:15;6657:3;6639:21;:::i;:::-;6393:414;;;;6701:11;6393:414;;;;6748:6;6393:414;;;;6791:1;-1:-1:-1::0;;;;;6393:414:6::3;;;::::0;6347:470:::3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;6347:470:6::3;::::0;;::::3;;::::0;;::::3;-1:-1:-1::0;;6347:470:6::3;::::0;::::3;::::0;;;::::3;::::0;;::::3;::::0;::::3;:::i;:::-;;;6335:813;;;;:::i;:::-;6885:6;6870:11;:21;;6862:65;;;::::0;-1:-1:-1;;;6862:65:6;;8995:2:7;6862:65:6::3;::::0;::::3;8977:21:7::0;9034:2;9014:18;;;9007:30;9073:33;9053:18;;;9046:61;9124:18;;6862:65:6::3;8793:355:7::0;6862:65:6::3;6943:42;::::0;;6755:25:7;;;6811:2;6796:18;;6789:34;;;6943:42:6::3;::::0;6728:18:7;6943:42:6::3;;;;;;;6822:170;5305:1845;;;;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;5164:1986:6;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:0;;9355:2:7;2460:63:0;;;9337:21:7;9394:2;9374:18;;;9367:30;9433:33;9413:18;;;9406:61;9484:18;;2460:63:0;9153:355:7;2460:63:0;1759:1;2598:7;:18;2336:287::o;241:180:7:-;300:6;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;-1:-1:-1;392:23:7;;241:180;-1:-1:-1;241:180:7:o;1033:248::-;1101:6;1109;1162:2;1150:9;1141:7;1137:23;1133:32;1130:52;;;1178:1;1175;1168:12;1130:52;-1:-1:-1;;1201:23:7;;;1271:2;1256:18;;;1243:32;;-1:-1:-1;1033:248:7:o;1737:222::-;1802:9;;;1823:10;;;1820:133;;;1875:10;1870:3;1866:20;1863:1;1856:31;1910:4;1907:1;1900:15;1938:4;1935:1;1928:15;1820:133;1737:222;;;;:::o;1964:410::-;2166:2;2148:21;;;2205:2;2185:18;;;2178:30;2244:34;2239:2;2224:18;;2217:62;-1:-1:-1;;;2310:2:7;2295:18;;2288:44;2364:3;2349:19;;1964:410::o;3087:793::-;3372:13;;-1:-1:-1;;;;;3368:22:7;;;3350:41;;3451:4;3439:17;;;3433:24;3429:33;;3407:20;;;3400:63;3523:4;3511:17;;;3505:24;3531:8;3501:39;3479:20;;;3472:69;3601:4;3589:17;;;3583:24;3579:33;;3557:20;;;3550:63;3669:4;3657:17;;;3651:24;3629:20;;;3622:54;3330:3;3720:17;;;3714:24;3692:20;;;3685:54;3795:4;3783:17;;;3777:24;3755:20;;;3748:54;3862:4;3850:17;;;3844:24;3840:33;3818:20;;;3811:63;;;;3299:3;3284:19;;3087:793::o;3885:184::-;3955:6;4008:2;3996:9;3987:7;3983:23;3979:32;3976:52;;;4024:1;4021;4014:12;3976:52;-1:-1:-1;4047:16:7;;3885:184;-1:-1:-1;3885:184:7:o;4074:179::-;4109:3;4151:1;4133:16;4130:23;4127:120;;;4197:1;4194;4191;4176:23;-1:-1:-1;4234:1:7;4228:8;4223:3;4219:18;4127:120;4074:179;:::o;4258:346::-;4368:2;4349:13;;-1:-1:-1;;4345:27:7;4333:40;;4403:18;4388:34;;4424:22;;;4385:62;4382:185;;;4489:10;4484:3;4480:20;4477:1;4470:31;4524:4;4521:1;4514:15;4552:4;4549:1;4542:15;4382:185;4583:2;4576:22;-1:-1:-1;;4258:346:7:o;4609:671::-;4648:3;4690:4;4672:16;4669:26;4666:39;;;4609:671;:::o;4666:39::-;4732:2;4726:9;-1:-1:-1;;4797:16:7;4793:25;;4790:1;4726:9;4769:50;4848:4;4842:11;4872:16;4907:18;4978:2;4971:4;4963:6;4959:17;4956:25;4951:2;4943:6;4940:14;4937:45;4934:58;;;4985:5;;;;;4609:671;:::o;4934:58::-;5022:6;5016:4;5012:17;5001:28;;5058:3;5052:10;5085:2;5077:6;5074:14;5071:27;;;5091:5;;;;;;4609:671;:::o;5071:27::-;5175:2;5156:16;5150:4;5146:27;5142:36;5135:4;5126:6;5121:3;5117:16;5113:27;5110:69;5107:82;;;5182:5;;;;;;4609:671;:::o;5107:82::-;5198:57;5249:4;5240:6;5232;5228:19;5224:30;5218:4;5198:57;:::i;:::-;-1:-1:-1;5271:3:7;;4609:671;-1:-1:-1;;;;;4609:671:7:o;5285:548::-;5397:4;5426:2;5455;5444:9;5437:21;5487:6;5481:13;5530:6;5525:2;5514:9;5510:18;5503:34;5555:1;5565:140;5579:6;5576:1;5573:13;5565:140;;;5674:14;;;5670:23;;5664:30;5640:17;;;5659:2;5636:26;5629:66;5594:10;;5565:140;;;5569:3;5754:1;5749:2;5740:6;5729:9;5725:22;5721:31;5714:42;5824:2;5817;5813:7;5808:2;5800:6;5796:15;5792:29;5781:9;5777:45;5773:54;5765:62;;;;5285:548;;;;:::o;6834:401::-;7036:2;7018:21;;;7075:2;7055:18;;;7048:30;7114:34;7109:2;7094:18;;7087:62;-1:-1:-1;;;7180:2:7;7165:18;;7158:35;7225:3;7210:19;;6834:401::o;7727:277::-;7794:6;7847:2;7835:9;7826:7;7822:23;7818:32;7815:52;;;7863:1;7860;7853:12;7815:52;7895:9;7889:16;7948:5;7941:13;7934:21;7927:5;7924:32;7914:60;;7970:1;7967;7960:12;7914:60;7993:5;7727:277;-1:-1:-1;;;7727:277:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "717000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "2414",
								"emergencyStopActive()": "2399",
								"getETHBalance()": "238",
								"launchTimestamp()": "2317",
								"swapETHForTokens(uint256)": "infinite",
								"swapTokensForETH(uint256,uint256)": "infinite",
								"token()": "2436",
								"tradingWindow()": "2340",
								"triggerEmergencyStop()": "27709",
								"uniswapV3Factory()": "2326",
								"uniswapV3Router()": "2327",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 357,
									"end": 7905,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 664,
									"end": 668,
									"name": "PUSH",
									"source": 6,
									"value": "708"
								},
								{
									"begin": 633,
									"end": 668,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 633,
									"end": 668,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 688,
									"end": 727,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 688,
									"end": 727,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 688,
									"end": 727,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 688,
									"end": 727,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 688,
									"end": 727,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 688,
									"end": 727,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1680,
									"end": 2372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1680,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1926,
									"end": 1944,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 991,
									"end": 993,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 973,
									"end": 994,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1032,
									"name": "PUSH",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1010,
									"end": 1028,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1010,
									"end": 1028,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1010,
									"end": 1028,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1003,
									"end": 1033,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1069,
									"end": 1103,
									"name": "PUSH",
									"source": 7,
									"value": "54726164696E672077696E646F77206D75737420626520677265617465722074"
								},
								{
									"begin": 1049,
									"end": 1067,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1049,
									"end": 1067,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1067,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1042,
									"end": 1104,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "68616E203"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1120,
									"end": 1138,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1120,
									"end": 1138,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1138,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1148,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1165,
									"end": 1184,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1165,
									"end": 1184,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1918,
									"end": 1986,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2059,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "SWAP8",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2098,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2124,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2170,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2185,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2180,
									"end": 2216,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2231,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2226,
									"end": 2244,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2244,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2234,
									"end": 2244,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2244,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2244,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2244,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2244,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2244,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2244,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2258,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2281,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2291,
									"end": 2306,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2291,
									"end": 2325,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2335,
									"end": 2348,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2335,
									"end": 2365,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 311,
									"end": 317,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 325,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 327,
									"end": 333,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 343,
									"end": 349,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 357,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 404,
									"end": 407,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 392,
									"end": 401,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 383,
									"end": 390,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 379,
									"end": 402,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 372,
									"end": 425,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 372,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 372,
									"end": 425,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 421,
									"end": 422,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 419,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 411,
									"end": 423,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 372,
									"end": 425,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 372,
									"end": 425,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 474,
									"end": 483,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 444,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 444,
									"end": 484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 444,
									"end": 484,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 444,
									"end": 484,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 434,
									"end": 484,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 434,
									"end": 484,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 503,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 548,
									"end": 550,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 546,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 533,
									"end": 551,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 503,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 503,
									"end": 552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 503,
									"end": 552,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 503,
									"end": 552,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 493,
									"end": 552,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 493,
									"end": 552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 571,
									"end": 620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 616,
									"end": 618,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 605,
									"end": 614,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 601,
									"end": 619,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 571,
									"end": 620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 571,
									"end": 620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 571,
									"end": 620,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 571,
									"end": 620,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 561,
									"end": 620,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 561,
									"end": 620,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 639,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 684,
									"end": 686,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 673,
									"end": 682,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 669,
									"end": 687,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 639,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 639,
									"end": 688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 639,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 639,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 629,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 629,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 728,
									"end": 731,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 717,
									"end": 726,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 713,
									"end": 732,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 707,
									"end": 733,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 697,
									"end": 733,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 697,
									"end": 733,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 773,
									"end": 776,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 762,
									"end": 771,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 758,
									"end": 777,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 752,
									"end": 778,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 742,
									"end": 778,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 742,
									"end": 778,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 196,
									"end": 784,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 789,
									"end": 1190,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 789,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 7905,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206878ce8217d6e793779ba5bc04c1c461696bd3e77d7caf6cf3c8617df9e5e9ca64736f6c63430008130033",
									".code": [
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "5B549182"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "5B549182"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "65CF7C9B"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "6E947298"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "A22280A6"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "FC0C546A"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "2C76D7A6"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "2EAB2841"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "358C7660"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "3CCFD60B"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "405D8E74"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "554A731D"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 7905,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 427,
											"end": 461,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 427,
											"end": 461,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 197,
											"end": 229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 197,
											"end": 229,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 197,
											"end": 229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 179,
											"end": 230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 179,
											"end": 230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 167,
											"end": 169,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 427,
											"end": 461,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 461,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 427,
											"end": 461,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3235,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3235,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 633,
											"end": 668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 572,
											"end": 597,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 572,
											"end": 597,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 633,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 426,
											"end": 603,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7205,
											"end": 7622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 688,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 688,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 727,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 773,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 773,
											"end": 787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 788,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 748,
											"end": 789,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 736,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 688,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 608,
											"end": 795,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 7670,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 467,
											"end": 508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 508,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 508,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 508,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 467,
											"end": 508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 467,
											"end": 508,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 467,
											"end": 508,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 597,
											"end": 627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 597,
											"end": 627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 597,
											"end": 627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 597,
											"end": 627,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 597,
											"end": 627,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 597,
											"end": 627,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2433,
											"end": 2533,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 5164,
											"end": 7150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5164,
											"end": 7150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 546,
											"end": 564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 546,
											"end": 564,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 546,
											"end": 564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 546,
											"end": 564,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 546,
											"end": 564,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 546,
											"end": 564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 546,
											"end": 564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 546,
											"end": 564,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1377,
											"end": 1390,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1359,
											"end": 1390,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1355,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1390,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1390,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1319,
											"end": 1462,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1582,
											"end": 1601,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1601,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1630,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2584,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2622,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "456D657267656E63792073746F7020697320616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2379,
											"end": 2727,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3450,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 3424,
											"end": 3441,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"modifierDepth": 3,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3502,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3377,
											"end": 3502,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3502,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3502,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3377,
											"end": 3502,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 2936,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3377,
											"end": 3502,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3377,
											"end": 3502,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3502,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420736C69707061676520746F6C6572616E6365000000000000"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3041,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3502,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2732,
											"end": 3082,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3502,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3377,
											"end": 3502,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3623,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3724,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4270,
											"end": 4285,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3623,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3623,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3724,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3753,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "BB8"
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4506,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3542,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4169,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "A2C2A"
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4285,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4285,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4302,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "414BF389"
										},
										{
											"begin": 4270,
											"end": 4302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4556,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4535,
											"end": 4550,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4553,
											"end": 4556,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "12C"
										},
										{
											"begin": 4535,
											"end": 4556,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4535,
											"end": 4556,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4556,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4535,
											"end": 4556,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4606,
											"modifierDepth": 3,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4651,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4688,
											"end": 4689,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4270,
											"end": 4714,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4270,
											"end": 4714,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4270,
											"end": 4714,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4258,
											"end": 5092,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A0"
										},
										{
											"begin": 4258,
											"end": 5092,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4258,
											"end": 5092,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5039,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 5026,
											"end": 5040,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5085,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5064,
											"end": 5085,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5064,
											"end": 5085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6042,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5064,
											"end": 5085,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5064,
											"end": 5085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5085,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6081,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6052,
											"end": 6082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DDD85C0819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6098,
											"end": 6116,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6098,
											"end": 6116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6098,
											"end": 6116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6132,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5085,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5838,
											"end": 6173,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4258,
											"end": 5092,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4810,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4797,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4810,
											"modifierDepth": 3,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4810,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4762,
											"end": 4870,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4762,
											"end": 4870,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4762,
											"end": 4870,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4870,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4762,
											"end": 4870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4762,
											"end": 4870,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4870,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4762,
											"end": 4870,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4762,
											"end": 4870,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6383,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6421,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6458,
											"end": 6492,
											"name": "PUSH",
											"source": 7,
											"value": "5265636569766564206C65737320746F6B656E73207468616E20657870656374"
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6509,
											"end": 6527,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6509,
											"end": 6527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6509,
											"end": 6527,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6534,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4870,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 6178,
											"end": 6576,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4870,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4762,
											"end": 4870,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 4929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "237F99C5B951562A01B6F0F161FB746AE06154DF5CF173BBE71B80ABAE954630"
										},
										{
											"begin": 4886,
											"end": 4929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4929,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4936,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 5094,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 5094,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 5094,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 5094,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 5094,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 5094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 5094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7205,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1135,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1144,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1117,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7318,
											"end": 7323,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7318,
											"end": 7348,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7318,
											"end": 7348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7346,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 179,
											"end": 230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7318,
											"end": 7323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 152,
											"end": 170,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 152,
											"end": 170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7348,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 7318,
											"end": 7348,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7318,
											"end": 7348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7463,
											"end": 7468,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7478,
											"end": 7483,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7478,
											"end": 7483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7463,
											"end": 7498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7673,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7716,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7716,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7348,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7348,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7400,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 7379,
											"end": 7400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7468,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 7463,
											"end": 7477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 7463,
											"end": 7498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7463,
											"end": 7498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7516,
											"end": 7521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7543,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7542,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7542,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7543,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7508,
											"end": 7543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7615,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7615,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8"
										},
										{
											"begin": 7581,
											"end": 7615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7615,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 7670,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1135,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1144,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1117,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1117,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7796,
											"end": 7815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7796,
											"end": 7815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7815,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7795,
											"end": 7815,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7773,
											"end": 7815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7815,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7815,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7815,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7815,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7815,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7853,
											"end": 7896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7895,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 773,
											"end": 787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 788,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 748,
											"end": 789,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "691E4978574C0C1BC8ADB37C112D98EB5CDD6456FE044B35CEC1F4A4F3C7F60E"
										},
										{
											"begin": 7853,
											"end": 7896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 736,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7896,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1377,
											"end": 1390,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1359,
											"end": 1390,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1359,
											"end": 1390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1355,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1390,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1390,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1319,
											"end": 1462,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1319,
											"end": 1462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1582,
											"end": 1601,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1601,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1630,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2584,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2622,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "456D657267656E63792073746F7020697320616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2379,
											"end": 2727,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1573,
											"end": 1630,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5334,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5330,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5334,
											"modifierDepth": 3,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5374,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5311,
											"end": 5374,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5374,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5374,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5311,
											"end": 5374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8213,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5374,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5311,
											"end": 5374,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5374,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 8214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8250,
											"end": 8252,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 8230,
											"end": 8248,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8230,
											"end": 8248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8230,
											"end": 8248,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8253,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8289,
											"end": 8323,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E20616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 8269,
											"end": 8287,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8269,
											"end": 8287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8262,
											"end": 8324,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5374,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 8009,
											"end": 8408,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5374,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5311,
											"end": 5374,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5449,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 5423,
											"end": 5440,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5449,
											"modifierDepth": 3,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5449,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5493,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5380,
											"end": 5493,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5493,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5380,
											"end": 5493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 2936,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5493,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5380,
											"end": 5493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5493,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420736C69707061676520746F6C6572616E6365000000000000"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3041,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5493,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2732,
											"end": 3082,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5493,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5380,
											"end": 5493,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5613,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5555,
											"end": 5613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5584,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5555,
											"end": 5613,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5598,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8782,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5560,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5573,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8588,
											"end": 8606,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8588,
											"end": 8606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5555,
											"end": 5613,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5555,
											"end": 5613,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5682,
											"end": 5687,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5725,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5892,
											"end": 5907,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5870,
											"end": 5922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5870,
											"end": 5922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5892,
											"end": 5907,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5907,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7673,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7673,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7673,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7716,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7716,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5687,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5725,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5746,
											"end": 5750,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "BB8"
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 5870,
											"end": 5883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5870,
											"end": 5922,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5870,
											"end": 5922,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6246,
											"end": 6247,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6563,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6379,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "414BF389"
										},
										{
											"begin": 6347,
											"end": 6379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6639,
											"end": 6660,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6639,
											"end": 6654,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6660,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "12C"
										},
										{
											"begin": 6639,
											"end": 6660,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6639,
											"end": 6660,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6639,
											"end": 6660,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6639,
											"end": 6660,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6712,
											"modifierDepth": 3,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6754,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6792,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 6347,
											"end": 6817,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 6347,
											"end": 6817,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6347,
											"end": 6817,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 7148,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6335,
											"end": 7148,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 7148,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6335,
											"end": 7148,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6335,
											"end": 7148,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 7148,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6335,
											"end": 7148,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 6891,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 6881,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 6891,
											"modifierDepth": 3,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 6891,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6927,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6862,
											"end": 6927,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6927,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6862,
											"end": 6927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6927,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 8997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6927,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6862,
											"end": 6927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6927,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8977,
											"end": 8998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9036,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9073,
											"end": 9106,
											"name": "PUSH",
											"source": 7,
											"value": "5265636569766564206C65737320455448207468616E20657870656374656400"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6862,
											"end": 6927,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 8793,
											"end": 9148,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6862,
											"end": 6927,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6862,
											"end": 6927,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6943,
											"end": 6985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6985,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "DFCA204483754B2DE4ACA26D42E4B04AD9473E0299C6EACCFB4F8F3646ED4490"
										},
										{
											"begin": 6943,
											"end": 6985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6985,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 6822,
											"end": 6992,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 7150,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 7150,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 7150,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 7150,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 7150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9355,
											"end": 9357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9396,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9374,
											"end": 9392,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9374,
											"end": 9392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9466,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9467,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9484,
											"end": 9502,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9484,
											"end": 9502,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9153,
											"end": 9508,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 421,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 332,
											"end": 339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 328,
											"end": 351,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 324,
											"end": 356,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 321,
											"end": 373,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 321,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 321,
											"end": 373,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 371,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 321,
											"end": 373,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 321,
											"end": 373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 392,
											"end": 415,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 241,
											"end": 421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 241,
											"end": 421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1281,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1033,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1160,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1180,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1130,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1224,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1224,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1275,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1033,
											"end": 1281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1959,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1737,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1833,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1833,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1953,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1820,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1866,
											"end": 1886,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1887,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 1914,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1942,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1935,
											"end": 1936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1820,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1959,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1964,
											"end": 2374,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1964,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2168,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 2185,
											"end": 2203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2278,
											"name": "PUSH",
											"source": 7,
											"value": "54726164696E6720616C6C6F776564206F6E6C792077697468696E2074686520"
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2279,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74726164696E672077696E646F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2310,
											"end": 2312,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2332,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1964,
											"end": 2374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3880,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3087,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3385,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3390,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3457,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3462,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3427,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3527,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3511,
											"end": 3528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3528,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3539,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFF"
										},
										{
											"begin": 3501,
											"end": 3540,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3499,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3541,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3605,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3589,
											"end": 3606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3589,
											"end": 3606,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3589,
											"end": 3606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3607,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3657,
											"end": 3674,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3674,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3675,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3676,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3333,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3720,
											"end": 3737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3712,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3795,
											"end": 3799,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 3783,
											"end": 3800,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3783,
											"end": 3800,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3783,
											"end": 3800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3801,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3866,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3850,
											"end": 3867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3868,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3873,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3874,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3874,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3874,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3302,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 4069,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3885,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 3961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 3994,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4006,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4011,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4028,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3976,
											"end": 4028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4022,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4028,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3976,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 4069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 4069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4074,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4109,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4133,
											"end": 4149,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4153,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4247,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4127,
											"end": 4247,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4198,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4194,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4192,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4199,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4236,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4223,
											"end": 4226,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4219,
											"end": 4237,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4247,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4127,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4604,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4258,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4349,
											"end": 4362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4372,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4388,
											"end": 4422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4388,
											"end": 4422,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4446,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4447,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4382,
											"end": 4567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4499,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4484,
											"end": 4487,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4480,
											"end": 4500,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4501,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4528,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4556,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4549,
											"end": 4550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4567,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4382,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4598,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4609,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4648,
											"end": 4651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4694,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4672,
											"end": 4688,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4669,
											"end": 4695,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4705,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4666,
											"end": 4705,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4705,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4666,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4726,
											"end": 4735,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4797,
											"end": 4813,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4791,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4726,
											"end": 4735,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4819,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4888,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 4975,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 4976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4956,
											"end": 4981,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4954,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4982,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4992,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4934,
											"end": 4992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4992,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4934,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5020,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5062,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5077,
											"end": 5083,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5074,
											"end": 5088,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5177,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5172,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5150,
											"end": 5154,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5124,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5179,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5107,
											"end": 5189,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5189,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5107,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5198,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5249,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5232,
											"end": 5238,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5224,
											"end": 5254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5198,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5198,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5198,
											"end": 5255,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5198,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5274,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 5280,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 5280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5833,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 5285,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5428,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5457,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5481,
											"end": 5494,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5523,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5555,
											"end": 5556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5586,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5688,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5657,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5661,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5565,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5740,
											"end": 5746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5738,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5725,
											"end": 5747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5756,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5824,
											"end": 5826,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5813,
											"end": 5820,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5810,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5800,
											"end": 5806,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5821,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5790,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5827,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5833,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6834,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6834,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7018,
											"end": 7039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7077,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7078,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7148,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E"
										},
										{
											"begin": 7109,
											"end": 7111,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7180,
											"end": 7182,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7228,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7210,
											"end": 7229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6834,
											"end": 7235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7727,
											"end": 8004,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 7727,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 7849,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7835,
											"end": 7844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7826,
											"end": 7833,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 7845,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7850,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7867,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 7815,
											"end": 7867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7860,
											"end": 7861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7853,
											"end": 7865,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7867,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 7815,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7904,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 7905,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7948,
											"end": 7953,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7941,
											"end": 7954,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 7955,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7927,
											"end": 7932,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7956,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7914,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 7914,
											"end": 7974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 7972,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7914,
											"end": 7974,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 7914,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7993,
											"end": 7998,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7727,
											"end": 8004,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7727,
											"end": 8004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"Contracts/interfaces/IERC20Minimal.sol",
								"Contracts/interfaces/ISwapRouter.sol",
								"Contracts/interfaces/IUniswapV3Factory.sol",
								"Contracts/interfaces/IWETH9.sol",
								"Contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"Contracts/snipe.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"emergencyStopActive()": "405d8e74",
							"getETHBalance()": "6e947298",
							"launchTimestamp()": "65cf7c9b",
							"swapETHForTokens(uint256)": "2eab2841",
							"swapTokensForETH(uint256,uint256)": "a22280a6",
							"token()": "fc0c546a",
							"tradingWindow()": "358c7660",
							"triggerEmergencyStop()": "554a731d",
							"uniswapV3Factory()": "5b549182",
							"uniswapV3Router()": "2c76d7a6",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV3RouterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV3FactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETHAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_launchTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tradingWindow\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"EmergencyStopTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensReceived\",\"type\":\"uint256\"}],\"name\":\"SwapETHForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"}],\"name\":\"SwapTokensForETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH9\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyStopActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slippageTolerance\",\"type\":\"uint256\"}],\"name\":\"swapETHForTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageTolerance\",\"type\":\"uint256\"}],\"name\":\"swapTokensForETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triggerEmergencyStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Router\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/snipe.sol\":\"UniswapBot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"Contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0x5780901e2263a6f5bddaaaa83f81992564cbf53accf8b190dda0175de5f35696\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b5be2e3cfffb8305c25ad102ad6f87f9b850cc7e4786b5cf5e5dc5b566120bb8\",\"dweb:/ipfs/QmPuHb8EF82goYmJbY8oQWhtAwjqdZdFPpdGd5Qu48eskK\"]},\"Contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xbd16bbd1dc97411ef2a2eec941ac65be759f0ab5a4a4c41a8dd67f21c670478d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8b138b6f9fa1da88029e21cdf095aeb5c55f8967383ff50efbb475512f874250\",\"dweb:/ipfs/QmRAHEyQUuJ7c3nqKNg9xFWcm9RYWbjaumFkCTerBRcAJf\"]},\"Contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xeb8deac356a9f2aed13f1caf289a785c7457404cdb516510001c3b22a2ad717d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d54ed6b3463c0b1b01866054d7b71618e5006fac287e344758958cf32dbe88cd\",\"dweb:/ipfs/QmQudPaKpDyHcMLRsY8vwysPhbprivBdMism4PtjMwJ6f9\"]},\"Contracts/interfaces/IWETH9.sol\":{\"keccak256\":\"0x9cc019937d4a4ffca2130389692acd71c135fa4ed8a1332875f6da665aa6ab6e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://53abdaf27bc33bb864602f3030ec1c680384e816274de1479a4f5e6a56e73d7b\",\"dweb:/ipfs/QmaEKGAaH17rHeUezqudbAauotRFNvuSTccJiAZkYUqDKz\"]},\"Contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x0b55e4b363711251c767e2ea579cdab2625e81857b2ccebe26060ce5bcf428f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://84473fcc963e6a4ff6d7db9f205c39938fd93050a2307030867c41d0bad04e82\",\"dweb:/ipfs/Qmc5LCzCejHES3kfqY55LH8n2GEYMCGHxc8rmjy5LX6xfz\"]},\"Contracts/snipe.sol\":{\"keccak256\":\"0x7052e7e03db8b16abab4e93ba7d7f5031e7c2cfec39cc353fb8c882549c6adb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c00c15e013c6a2bff24dd462eea4eb9afdaf1d581f89a8d60301f918fc56f4\",\"dweb:/ipfs/QmP2hx4tr4d7xwb3EhHtFfTESUHBgiRuj5RqdTC8e2xKaJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 351,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "uniswapV3Router",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ISwapRouter)225"
							},
							{
								"astId": 354,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "uniswapV3Factory",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IUniswapV3Factory)308"
							},
							{
								"astId": 357,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "token",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20Minimal)125"
							},
							{
								"astId": 360,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "WETH",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IWETH9)325"
							},
							{
								"astId": 362,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 364,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "launchTimestamp",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 367,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "tradingWindow",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 370,
								"contract": "Contracts/snipe.sol:UniswapBot",
								"label": "emergencyStopActive",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Minimal)125": {
								"encoding": "inplace",
								"label": "contract IERC20Minimal",
								"numberOfBytes": "20"
							},
							"t_contract(ISwapRouter)225": {
								"encoding": "inplace",
								"label": "contract ISwapRouter",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV3Factory)308": {
								"encoding": "inplace",
								"label": "contract IUniswapV3Factory",
								"numberOfBytes": "20"
							},
							"t_contract(IWETH9)325": {
								"encoding": "inplace",
								"label": "contract IWETH9",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							53
						]
					},
					"id": 54,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 53,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 53,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 53,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 54,
							"src": "888:1952:0",
							"usedErrors": []
						}
					],
					"src": "112:2729:0"
				},
				"id": 0
			},
			"Contracts/interfaces/IERC20Minimal.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/IERC20Minimal.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							125
						]
					},
					"id": 126,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Minimal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 56,
								"nodeType": "StructuredDocumentation",
								"src": "72:132:1",
								"text": "@title Minimal ERC20 interface for Uniswap\n @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 125,
							"linearizedBaseContracts": [
								125
							],
							"name": "IERC20Minimal",
							"nameLocation": "214:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "234:201:1",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "449:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "467:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "459:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:17:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "499:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:9:1"
									},
									"scope": 125,
									"src": "440:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "514:333:1",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "861:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "887:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "879:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "914:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "906:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:57:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "945:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 71,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:6:1"
									},
									"scope": 125,
									"src": "852:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "957:250:1",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1221:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1248:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1240:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1271:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1263:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:54:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1308:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:9:1"
									},
									"scope": 125,
									"src": "1212:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1323:343:1",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1680:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1696:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1688:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1713:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1705:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1687:33:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1739:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:6:1"
									},
									"scope": 125,
									"src": "1671:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1751:371:1",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2136:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2166:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2158:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2190:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2182:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2217:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2209:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:81:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2248:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:6:1"
									},
									"scope": 125,
									"src": "2127:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2260:369:1",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 115,
									"name": "Transfer",
									"nameLocation": "2640:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2665:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2649:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2687:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2671:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2699:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2691:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:57:1"
									},
									"src": "2634:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2712:321:1",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 124,
									"name": "Approval",
									"nameLocation": "3044:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3062:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3062:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3109:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3093:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3134:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3126:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3126:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3052:93:1"
									},
									"src": "3038:108:1"
								}
							],
							"scope": 126,
							"src": "204:2944:1",
							"usedErrors": []
						}
					],
					"src": "45:3104:1"
				},
				"id": 1
			},
			"Contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							225
						],
						"IUniswapV3SwapCallback": [
							339
						]
					},
					"id": 226,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 128,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "Contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "./callback/IUniswapV3SwapCallback.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 226,
							"sourceUnit": 340,
							"src": "91:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 131,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"269:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 339,
										"src": "269:22:2"
									},
									"id": 132,
									"nodeType": "InheritanceSpecifier",
									"src": "269:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 130,
								"nodeType": "StructuredDocumentation",
								"src": "140:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225,
								339
							],
							"name": "ISwapRouter",
							"nameLocation": "254:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 149,
									"members": [
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "346:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "338:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 133,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "338:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "371:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "363:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "363:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "396:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "389:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 137,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "389:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "417:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "409:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 139,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "409:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 142,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "444:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "436:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 141,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "436:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "470:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "462:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "496:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "488:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 145,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "488:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "530:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "522:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 147,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "522:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "305:22:2",
									"nodeType": "StructDefinition",
									"scope": 225,
									"src": "298:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "560:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "824:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "873:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "841:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$149_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 152,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 151,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"841:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 149,
														"src": "841:22:2"
													},
													"referencedDeclaration": 149,
													"src": "841:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$149_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:40:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "915:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "907:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:19:2"
									},
									"scope": 225,
									"src": "815:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 169,
									"members": [
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "972:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 169,
											"src": "966:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 159,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "966:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 162,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "994:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 169,
											"src": "986:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "986:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1021:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 169,
											"src": "1013:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 163,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1013:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 166,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1047:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 169,
											"src": "1039:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 165,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1039:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1073:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 169,
											"src": "1065:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 167,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1065:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "939:16:2",
									"nodeType": "StructDefinition",
									"scope": 225,
									"src": "932:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1102:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1389:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1426:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1400:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$169_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 171,
														"name": "ExactInputParams",
														"nameLocations": [
															"1400:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 169,
														"src": "1400:16:2"
													},
													"referencedDeclaration": 169,
													"src": "1400:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$169_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:34:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1468:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1460:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:19:2"
									},
									"scope": 225,
									"src": "1380:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 195,
									"members": [
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1534:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "1526:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 179,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1526:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1559:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "1551:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 181,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1551:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1584:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "1577:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 183,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1577:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 186,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1605:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "1597:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1597:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 188,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1632:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "1624:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 190,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1658:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "1650:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 189,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1650:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1685:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "1677:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 191,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1677:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1718:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "1710:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 193,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1710:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1492:23:2",
									"nodeType": "StructDefinition",
									"scope": 225,
									"src": "1485:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "1748:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2012:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2063:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2030:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$195_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 197,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2030:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 195,
														"src": "2030:23:2"
													},
													"referencedDeclaration": 195,
													"src": "2030:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$195_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:41:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2105:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2097:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"scope": 225,
									"src": "2003:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 215,
									"members": [
										{
											"constant": false,
											"id": 206,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2162:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "2156:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 205,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2156:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 208,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2184:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "2176:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 207,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2176:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 210,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2211:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "2203:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 209,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2203:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2237:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "2229:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2229:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2264:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "2256:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 213,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2256:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2128:17:2",
									"nodeType": "StructDefinition",
									"scope": 225,
									"src": "2121:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2292:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2590:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2629:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2602:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$215_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 217,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2602:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 215,
														"src": "2602:17:2"
													},
													"referencedDeclaration": 215,
													"src": "2602:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$215_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2601:35:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2671:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2663:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2662:18:2"
									},
									"scope": 225,
									"src": "2581:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "244:2439:2",
							"usedErrors": []
						}
					],
					"src": "45:2638:2"
				},
				"id": 2
			},
			"Contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							308
						]
					},
					"id": 309,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "70:163:3",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 308,
							"linearizedBaseContracts": [
								308
							],
							"name": "IUniswapV3Factory",
							"nameLocation": "243:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "267:185:3",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 235,
									"name": "OwnerChanged",
									"nameLocation": "463:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "492:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "476:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "518:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "502:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:52:3"
									},
									"src": "457:71:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "534:421:3",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"eventSelector": "783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118",
									"id": 248,
									"name": "PoolCreated",
									"nameLocation": "966:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1003:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "987:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1035:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1019:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1066:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1051:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 241,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1051:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1085:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1079:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 243,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1079:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1114:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1106:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:147:3"
									},
									"src": "960:165:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1131:275:3",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"eventSelector": "c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc",
									"id": 255,
									"name": "FeeAmountEnabled",
									"nameLocation": "1417:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1449:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1434:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 250,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1434:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1468:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1454:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 252,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1454:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:47:3"
									},
									"src": "1411:70:3"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "1487:163:3",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1664:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:2:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1695:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1694:9:3"
									},
									"scope": 308,
									"src": "1655:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "1710:348:3",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nameLocation": "2072:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2100:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2093:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 263,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:12:3"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2128:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 266,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2128:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:7:3"
									},
									"scope": 308,
									"src": "2063:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "2141:471:3",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "2626:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2651:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2643:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2643:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2675:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2667:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2698:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2691:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 275,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2691:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:74:3"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2739:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2731:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2730:14:3"
									},
									"scope": 308,
									"src": "2617:128:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "2751:554:3",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "3319:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3347:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "3339:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3371:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "3363:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3363:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3394:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "3387:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 287,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3387:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:74:3"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "3422:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3421:14:3"
									},
									"scope": 308,
									"src": "3310:126:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "3442:144:3",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "3600:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3617:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3609:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3608:16:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:0:3"
									},
									"scope": 308,
									"src": "3591:43:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3640:326:3",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nameLocation": "3980:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4003:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3996:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 301,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3996:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "4014:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "4008:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 303,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4008:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:31:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4035:0:3"
									},
									"scope": 308,
									"src": "3971:65:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 309,
							"src": "233:3805:3",
							"usedErrors": []
						}
					],
					"src": "45:3994:3"
				},
				"id": 3
			},
			"Contracts/interfaces/IWETH9.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/IWETH9.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							125
						],
						"IWETH9": [
							325
						]
					},
					"id": 326,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:4"
						},
						{
							"absolutePath": "Contracts/interfaces/IERC20Minimal.sol",
							"file": "./IERC20Minimal.sol",
							"id": 311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 326,
							"sourceUnit": 126,
							"src": "71:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 313,
										"name": "IERC20Minimal",
										"nameLocations": [
											"153:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "153:13:4"
									},
									"id": 314,
									"nodeType": "InheritanceSpecifier",
									"src": "153:13:4"
								}
							],
							"canonicalName": "IWETH9",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 312,
								"nodeType": "StructuredDocumentation",
								"src": "102:31:4",
								"text": "@title Interface for WETH9"
							},
							"fullyImplemented": false,
							"id": 325,
							"linearizedBaseContracts": [
								325,
								125
							],
							"name": "IWETH9",
							"nameLocation": "143:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "173:46:4",
										"text": "@notice Deposit ether to get wrapped ether"
									},
									"functionSelector": "d0e30db0",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "233:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:2:4"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:0:4"
									},
									"scope": 325,
									"src": "224:36:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "266:47:4",
										"text": "@notice Withdraw wrapped ether to get ether"
									},
									"functionSelector": "2e1a7d4d",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "327:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "336:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:9:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:0:4"
									},
									"scope": 325,
									"src": "318:36:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 326,
							"src": "133:224:4",
							"usedErrors": []
						}
					],
					"src": "45:312:4"
				},
				"id": 4
			},
			"Contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							339
						]
					},
					"id": 340,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 327,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:5",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:5",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1197:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 330,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1226:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 332,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1255:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:5"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:5"
									},
									"scope": 339,
									"src": "1157:133:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 340,
							"src": "215:1077:5",
							"usedErrors": []
						}
					],
					"src": "45:1247:5"
				},
				"id": 5
			},
			"Contracts/snipe.sol": {
				"ast": {
					"absolutePath": "Contracts/snipe.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							125
						],
						"ISwapRouter": [
							225
						],
						"IUniswapV3Factory": [
							308
						],
						"IUniswapV3SwapCallback": [
							339
						],
						"IWETH9": [
							325
						],
						"ReentrancyGuard": [
							53
						],
						"UniswapBot": [
							792
						]
					},
					"id": 793,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 341,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "Contracts/interfaces/ISwapRouter.sol",
							"file": "./interfaces/ISwapRouter.sol",
							"id": 342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 793,
							"sourceUnit": 226,
							"src": "71:38:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/IWETH9.sol",
							"file": "./interfaces/IWETH9.sol",
							"id": 343,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 793,
							"sourceUnit": 326,
							"src": "110:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/IUniswapV3Factory.sol",
							"file": "./interfaces/IUniswapV3Factory.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 793,
							"sourceUnit": 309,
							"src": "144:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/IERC20Minimal.sol",
							"file": "./interfaces/IERC20Minimal.sol",
							"id": 345,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 793,
							"sourceUnit": 126,
							"src": "189:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 346,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 793,
							"sourceUnit": 54,
							"src": "230:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 347,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"380:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 53,
										"src": "380:15:6"
									},
									"id": 348,
									"nodeType": "InheritanceSpecifier",
									"src": "380:15:6"
								}
							],
							"canonicalName": "UniswapBot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 792,
							"linearizedBaseContracts": [
								792,
								53
							],
							"name": "UniswapBot",
							"nameLocation": "366:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2c76d7a6",
									"id": 351,
									"mutability": "mutable",
									"name": "uniswapV3Router",
									"nameLocation": "446:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 792,
									"src": "427:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$225",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 350,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 349,
											"name": "ISwapRouter",
											"nameLocations": [
												"427:11:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "427:11:6"
										},
										"referencedDeclaration": 225,
										"src": "427:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$225",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5b549182",
									"id": 354,
									"mutability": "mutable",
									"name": "uniswapV3Factory",
									"nameLocation": "492:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 792,
									"src": "467:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV3Factory_$308",
										"typeString": "contract IUniswapV3Factory"
									},
									"typeName": {
										"id": 353,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 352,
											"name": "IUniswapV3Factory",
											"nameLocations": [
												"467:17:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 308,
											"src": "467:17:6"
										},
										"referencedDeclaration": 308,
										"src": "467:17:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Factory_$308",
											"typeString": "contract IUniswapV3Factory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 357,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "535:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 792,
									"src": "514:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Minimal_$125",
										"typeString": "contract IERC20Minimal"
									},
									"typeName": {
										"id": 356,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 355,
											"name": "IERC20Minimal",
											"nameLocations": [
												"514:13:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 125,
											"src": "514:13:6"
										},
										"referencedDeclaration": 125,
										"src": "514:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Minimal_$125",
											"typeString": "contract IERC20Minimal"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 360,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "560:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 792,
									"src": "546:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWETH9_$325",
										"typeString": "contract IWETH9"
									},
									"typeName": {
										"id": 359,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 358,
											"name": "IWETH9",
											"nameLocations": [
												"546:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 325,
											"src": "546:6:6"
										},
										"referencedDeclaration": 325,
										"src": "546:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETH9_$325",
											"typeString": "contract IWETH9"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 362,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "586:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 792,
									"src": "570:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 361,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "570:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "65cf7c9b",
									"id": 364,
									"mutability": "mutable",
									"name": "launchTimestamp",
									"nameLocation": "612:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 792,
									"src": "597:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "597:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "358c7660",
									"id": 367,
									"mutability": "mutable",
									"name": "tradingWindow",
									"nameLocation": "648:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 792,
									"src": "633:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31383030",
										"id": 366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "664:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1800_by_1",
											"typeString": "int_const 1800"
										},
										"value": "1800"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "405d8e74",
									"id": 370,
									"mutability": "mutable",
									"name": "emergencyStopActive",
									"nameLocation": "700:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 792,
									"src": "688:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 368,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "688:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "722:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "237f99c5b951562a01b6f0f161fb746ae06154df5cf173bbe71b80abae954630",
									"id": 376,
									"name": "SwapETHForTokens",
									"nameLocation": "761:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "786:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "778:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensReceived",
												"nameLocation": "805:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "797:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:43:6"
									},
									"src": "755:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "dfca204483754b2de4aca26d42e4b04ad9473e0299c6eaccfb4f8f3646ed4490",
									"id": 382,
									"name": "SwapTokensForETH",
									"nameLocation": "832:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "857:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "849:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethReceived",
												"nameLocation": "878:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "870:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:42:6"
									},
									"src": "826:65:6"
								},
								{
									"anonymous": false,
									"eventSelector": "56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8",
									"id": 388,
									"name": "Withdraw",
									"nameLocation": "903:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "920:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "912:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "941:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "933:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:40:6"
									},
									"src": "897:55:6"
								},
								{
									"anonymous": false,
									"eventSelector": "691e4978574c0c1bc8adb37c112d98eb5cdd6456fe044b35cec1f4a4f3c7f60e",
									"id": 392,
									"name": "EmergencyStopTriggered",
									"nameLocation": "963:22:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"indexed": false,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "991:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "986:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:15:6"
									},
									"src": "957:44:6"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "1052:152:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 395,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1125:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1129:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1125:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 397,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "1139:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1125:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1146:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															},
															"value": "Only the owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1117:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1117:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "1117:69:6"
											},
											{
												"id": 402,
												"nodeType": "PlaceholderStatement",
												"src": "1196:1:6"
											}
										]
									},
									"id": 404,
									"name": "onlyOwner",
									"nameLocation": "1040:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1049:2:6"
									},
									"src": "1031:173:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "1241:239:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 407,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1340:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1346:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1340:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "launchTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "1359:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 410,
																	"name": "tradingWindow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "1377:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1359:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e6720616c6c6f776564206f6e6c792077697468696e207468652074726164696e672077696e646f77",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1404:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_206bbb96e38086280d4c776d7a338c6b0f878bbe1188137fd9a4d00b314a92be",
																"typeString": "literal_string \"Trading allowed only within the trading window\""
															},
															"value": "Trading allowed only within the trading window"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_206bbb96e38086280d4c776d7a338c6b0f878bbe1188137fd9a4d00b314a92be",
																"typeString": "literal_string \"Trading allowed only within the trading window\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1319:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1319:143:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "1319:143:6"
											},
											{
												"id": 416,
												"nodeType": "PlaceholderStatement",
												"src": "1472:1:6"
											}
										]
									},
									"id": 418,
									"name": "withinTradingWindow",
									"nameLocation": "1219:19:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1238:2:6"
									},
									"src": "1210:270:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1512:136:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1581:20:6",
															"subExpression": {
																"id": 421,
																"name": "emergencyStopActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "1582:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d657267656e63792073746f7020697320616374697665",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1603:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43ac8f3b7e8afde94692fc4b746bc65b2127027ea871813b79f777ad7971d4ca",
																"typeString": "literal_string \"Emergency stop is active\""
															},
															"value": "Emergency stop is active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43ac8f3b7e8afde94692fc4b746bc65b2127027ea871813b79f777ad7971d4ca",
																"typeString": "literal_string \"Emergency stop is active\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1573:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1573:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1573:57:6"
											},
											{
												"id": 426,
												"nodeType": "PlaceholderStatement",
												"src": "1640:1:6"
											}
										]
									},
									"id": 428,
									"name": "notInEmergency",
									"nameLocation": "1495:14:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1509:2:6"
									},
									"src": "1486:162:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1908:464:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 444,
																"name": "_tradingWindow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "1926:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1943:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1926:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e672077696e646f77206d7573742062652067726561746572207468616e2030",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1946:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4bb180dba4d4fe5a6c9482b5f0e84e34460326b375e16a729db19dc2dcc8d7d",
																"typeString": "literal_string \"Trading window must be greater than 0\""
															},
															"value": "Trading window must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4bb180dba4d4fe5a6c9482b5f0e84e34460326b375e16a729db19dc2dcc8d7d",
																"typeString": "literal_string \"Trading window must be greater than 0\""
															}
														],
														"id": 443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1918:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "1918:68:6"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 450,
														"name": "uniswapV3Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2044:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$225",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 452,
																"name": "_uniswapV3RouterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "2074:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 451,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2062:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$225_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2062:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$225",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "2044:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$225",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2044:54:6"
											},
											{
												"expression": {
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 456,
														"name": "uniswapV3Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2108:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Factory_$308",
															"typeString": "contract IUniswapV3Factory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 458,
																"name": "_uniswapV3FactoryAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "2145:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 457,
															"name": "IUniswapV3Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2127:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$308_$",
																"typeString": "type(contract IUniswapV3Factory)"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2127:43:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Factory_$308",
															"typeString": "contract IUniswapV3Factory"
														}
													},
													"src": "2108:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Factory_$308",
														"typeString": "contract IUniswapV3Factory"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "2108:62:6"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 462,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "2180:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Minimal_$125",
															"typeString": "contract IERC20Minimal"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 464,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2202:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 463,
															"name": "IERC20Minimal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2188:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$125_$",
																"typeString": "type(contract IERC20Minimal)"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2188:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Minimal_$125",
															"typeString": "contract IERC20Minimal"
														}
													},
													"src": "2180:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Minimal_$125",
														"typeString": "contract IERC20Minimal"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "2180:36:6"
											},
											{
												"expression": {
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 468,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2226:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 469,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2234:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2238:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2234:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2226:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "2226:18:6"
											},
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 473,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "2254:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH9_$325",
															"typeString": "contract IWETH9"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 475,
																"name": "_WETHAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "2268:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 474,
															"name": "IWETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "2261:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWETH9_$325_$",
																"typeString": "type(contract IWETH9)"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2261:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH9_$325",
															"typeString": "contract IWETH9"
														}
													},
													"src": "2254:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH9_$325",
														"typeString": "contract IWETH9"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "2254:27:6"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 479,
														"name": "launchTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2291:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 480,
														"name": "_launchTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "2309:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2291:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "2291:34:6"
											},
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 483,
														"name": "tradingWindow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2335:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 484,
														"name": "_tradingWindow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2351:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2335:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "2335:30:6"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1709:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1701:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "_uniswapV3RouterAddress",
												"nameLocation": "1740:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1732:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "_uniswapV3FactoryAddress",
												"nameLocation": "1781:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1773:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_WETHAddress",
												"nameLocation": "1823:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1815:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "_launchTimestamp",
												"nameLocation": "1853:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1845:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "_tradingWindow",
												"nameLocation": "1887:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1879:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:216:6"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1908:0:6"
									},
									"scope": 792,
									"src": "1680:692:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2488:45:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 495,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2513:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UniswapBot_$792",
																	"typeString": "contract UniswapBot"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UniswapBot_$792",
																	"typeString": "contract UniswapBot"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2505:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2505:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2505:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2519:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2505:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 492,
												"id": 498,
												"nodeType": "Return",
												"src": "2498:28:6"
											}
										]
									},
									"functionSelector": "6e947298",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHBalance",
									"nameLocation": "2442:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2479:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:9:6"
									},
									"scope": 792,
									"src": "2433:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3367:1727:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 512,
																	"name": "slippageTolerance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "3398:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3419:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3398:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 515,
																	"name": "slippageTolerance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "3424:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "3424:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3398:52:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736c69707061676520746f6c6572616e6365",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3464:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24063e7b66b6ab0a6213e512791c8ba5438913281504a1fb2c262824fb6804e3",
																"typeString": "literal_string \"Invalid slippage tolerance\""
															},
															"value": "Invalid slippage tolerance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24063e7b66b6ab0a6213e512791c8ba5438913281504a1fb2c262824fb6804e3",
																"typeString": "literal_string \"Invalid slippage tolerance\""
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3377:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3377:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "3377:125:6"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "3521:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "3513:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3513:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"expression": {
														"id": 524,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3533:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3537:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "3533:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3513:29:6"
											},
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "3601:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "3593:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3593:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"arguments": [
														{
															"id": 531,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3619:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$325",
																"typeString": "contract IWETH9"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IWETH9_$325",
																"typeString": "contract IWETH9"
															}
														],
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3611:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 529,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3611:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3611:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3593:31:6"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "3700:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "3692:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3692:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 540,
												"initialValue": {
													"arguments": [
														{
															"id": 538,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3719:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Minimal_$125",
																"typeString": "contract IERC20Minimal"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Minimal_$125",
																"typeString": "contract IERC20Minimal"
															}
														],
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3711:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 536,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3711:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3692:33:6"
											},
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3743:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "3736:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 541,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "3736:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"hexValue": "33303030",
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3749:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3000_by_1",
														"typeString": "int_const 3000"
													},
													"value": "3000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:17:6"
											},
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "minTokens",
														"nameLocation": "4151:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "4143:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4143:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"hexValue": "363636363636",
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4163:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_666666_by_1",
														"typeString": "int_const 666666"
													},
													"value": "666666"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4143:26:6"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 586,
															"nodeType": "Block",
															"src": "4752:184:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 575,
																					"name": "tokensReceived",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 572,
																					"src": "4783:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"id": 576,
																					"name": "minTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "4801:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4783:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"hexValue": "5265636569766564206c65737320746f6b656e73207468616e206578706563746564",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4824:36:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_f2e00703539f3f04fd06fb801f3cd19fa6ef510237114985f6005a888dc270d5",
																					"typeString": "literal_string \"Received less tokens than expected\""
																				},
																				"value": "Received less tokens than expected"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_f2e00703539f3f04fd06fb801f3cd19fa6ef510237114985f6005a888dc270d5",
																					"typeString": "literal_string \"Received less tokens than expected\""
																				}
																			],
																			"id": 574,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "4762:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4762:108:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 580,
																	"nodeType": "ExpressionStatement",
																	"src": "4762:108:6"
																},
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 582,
																				"name": "ethAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "4903:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 583,
																				"name": "tokensReceived",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 572,
																				"src": "4914:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 581,
																			"name": "SwapETHForTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "4886:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (uint256,uint256)"
																			}
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4886:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 585,
																	"nodeType": "EmitStatement",
																	"src": "4881:48:6"
																}
															]
														},
														"errorName": "",
														"id": 587,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 573,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 572,
																	"mutability": "mutable",
																	"name": "tokensReceived",
																	"nameLocation": "4736:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 587,
																	"src": "4728:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 571,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4728:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "4727:24:6"
														},
														"src": "4719:217:6"
													},
													{
														"block": {
															"id": 595,
															"nodeType": "Block",
															"src": "4971:76:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 592,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "5033:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 591,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "5026:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5026:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 594,
																	"nodeType": "ExpressionStatement",
																	"src": "5026:14:6"
																}
															]
														},
														"errorName": "Error",
														"id": 596,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 590,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 589,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "4963:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 596,
																	"src": "4949:20:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 588,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "4949:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "4948:22:6"
														},
														"src": "4937:110:6"
													},
													{
														"block": {
															"id": 601,
															"nodeType": "Block",
															"src": "5054:38:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "53776170206661696c6564",
																				"id": 598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5071:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_179799c46f636fb7268f34ab3b1b94bc88b91aaeefb7ef2027cbcce0bd669c69",
																					"typeString": "literal_string \"Swap failed\""
																				},
																				"value": "Swap failed"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_179799c46f636fb7268f34ab3b1b94bc88b91aaeefb7ef2027cbcce0bd669c69",
																					"typeString": "literal_string \"Swap failed\""
																				}
																			],
																			"id": 597,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "5064:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5064:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 600,
																	"nodeType": "ExpressionStatement",
																	"src": "5064:21:6"
																}
															]
														},
														"errorName": "",
														"id": 602,
														"nodeType": "TryCatchClause",
														"src": "5048:44:6"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 555,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "4396:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 556,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "4431:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4462:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 560,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4502:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_UniswapBot_$792",
																				"typeString": "contract UniswapBot"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_UniswapBot_$792",
																				"typeString": "contract UniswapBot"
																			}
																		],
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4494:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 558,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4494:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4494:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 562,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4535:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4541:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4535:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "333030",
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4553:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		},
																		"value": "300"
																	},
																	"src": "4535:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 566,
																	"name": "ethAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4597:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 567,
																	"name": "minTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "4642:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4688:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"expression": {
																	"id": 553,
																	"name": "ISwapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "4334:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$225_$",
																		"typeString": "type(contract ISwapRouter)"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4346:22:6",
																"memberName": "ExactInputSingleParams",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 149,
																"src": "4334:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$149_storage_ptr_$",
																	"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"4387:7:6",
																"4421:8:6",
																"4457:3:6",
																"4483:9:6",
																"4525:8:6",
																"4587:8:6",
																"4624:16:6",
																"4669:17:6"
															],
															"names": [
																"tokenIn",
																"tokenOut",
																"fee",
																"recipient",
																"deadline",
																"amountIn",
																"amountOutMinimum",
																"sqrtPriceLimitX96"
															],
															"nodeType": "FunctionCall",
															"src": "4334:370:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$149_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$149_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$149_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 549,
																"name": "uniswapV3Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "4270:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$225",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4286:16:6",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 158,
															"src": "4270:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$149_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 551,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "4310:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4270:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$149_memory_ptr_$returns$_t_uint256_$value",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:444:6",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 603,
												"nodeType": "TryStatement",
												"src": "4258:834:6"
											}
										]
									},
									"functionSelector": "2eab2841",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "nonReentrant",
												"nameLocations": [
													"3319:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "3319:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3319:12:6"
										},
										{
											"id": 507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 506,
												"name": "withinTradingWindow",
												"nameLocations": [
													"3332:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 418,
												"src": "3332:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3332:19:6"
										},
										{
											"id": 509,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 508,
												"name": "notInEmergency",
												"nameLocations": [
													"3352:14:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 428,
												"src": "3352:14:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3352:14:6"
										}
									],
									"name": "swapETHForTokens",
									"nameLocation": "3244:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "slippageTolerance",
												"nameLocation": "3278:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3270:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:41:6"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3367:0:6"
									},
									"scope": 792,
									"src": "3235:1859:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "5305:1845:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 619,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "5319:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5333:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5319:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5336:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf",
																"typeString": "literal_string \"Token amount must be greater than 0\""
															},
															"value": "Token amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf",
																"typeString": "literal_string \"Token amount must be greater than 0\""
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5311:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5311:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "5311:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "slippageTolerance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "5397:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5418:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5397:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 629,
																	"name": "slippageTolerance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "5423:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5444:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "5423:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5397:52:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736c69707061676520746f6c6572616e6365",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5459:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24063e7b66b6ab0a6213e512791c8ba5438913281504a1fb2c262824fb6804e3",
																"typeString": "literal_string \"Invalid slippage tolerance\""
															},
															"value": "Invalid slippage tolerance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24063e7b66b6ab0a6213e512791c8ba5438913281504a1fb2c262824fb6804e3",
																"typeString": "literal_string \"Invalid slippage tolerance\""
															}
														],
														"id": 625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5380:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5380:113:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5380:113:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 639,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5574:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5578:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5574:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 643,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5594:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapBot_$792",
																		"typeString": "contract UniswapBot"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapBot_$792",
																		"typeString": "contract UniswapBot"
																	}
																],
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5586:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 641,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5586:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5586:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "5601:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 636,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5555:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Minimal_$125",
																"typeString": "contract IERC20Minimal"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5561:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "5555:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5555:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "5555:58:6"
											},
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "5664:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "5656:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 648,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5656:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"arguments": [
														{
															"id": 652,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5682:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Minimal_$125",
																"typeString": "contract IERC20Minimal"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Minimal_$125",
																"typeString": "contract IERC20Minimal"
															}
														],
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5674:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 650,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5674:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5674:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5656:32:6"
											},
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "5702:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "5694:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 655,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5694:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "5721:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$325",
																"typeString": "contract IWETH9"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IWETH9_$325",
																"typeString": "contract IWETH9"
															}
														],
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5713:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 657,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5713:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5713:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5694:32:6"
											},
											{
												"assignments": [
													663
												],
												"declarations": [
													{
														"constant": false,
														"id": 663,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "5740:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "5733:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 662,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "5733:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"hexValue": "33303030",
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5746:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3000_by_1",
														"typeString": "int_const 3000"
													},
													"value": "3000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5733:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 671,
																	"name": "uniswapV3Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "5892:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$225",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$225",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5884:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 669,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5884:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5884:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "5910:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 666,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Minimal_$125",
																"typeString": "contract IERC20Minimal"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5876:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "5870:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5870:52:6"
											},
											{
												"assignments": [
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "minEth",
														"nameLocation": "6237:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "6229:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 676,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6229:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"hexValue": "31",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6246:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6229:18:6"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 713,
															"nodeType": "Block",
															"src": "6852:140:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 702,
																					"name": "ethReceived",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 699,
																					"src": "6870:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"id": 703,
																					"name": "minEth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 677,
																					"src": "6885:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6870:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"hexValue": "5265636569766564206c65737320455448207468616e206578706563746564",
																				"id": 705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6893:33:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_2832013d0cfc63f8f845987cb73302ef839a7f2bf379320e184d35a891b049d0",
																					"typeString": "literal_string \"Received less ETH than expected\""
																				},
																				"value": "Received less ETH than expected"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_2832013d0cfc63f8f845987cb73302ef839a7f2bf379320e184d35a891b049d0",
																					"typeString": "literal_string \"Received less ETH than expected\""
																				}
																			],
																			"id": 701,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "6862:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6862:65:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 707,
																	"nodeType": "ExpressionStatement",
																	"src": "6862:65:6"
																},
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 709,
																				"name": "tokenAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "6960:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 710,
																				"name": "ethReceived",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 699,
																				"src": "6973:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 708,
																			"name": "SwapTokensForETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 382,
																			"src": "6943:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (uint256,uint256)"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6943:42:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 712,
																	"nodeType": "EmitStatement",
																	"src": "6938:47:6"
																}
															]
														},
														"errorName": "",
														"id": 714,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 700,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 699,
																	"mutability": "mutable",
																	"name": "ethReceived",
																	"nameLocation": "6839:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 714,
																	"src": "6831:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 698,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6831:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6830:21:6"
														},
														"src": "6822:170:6"
													},
													{
														"block": {
															"id": 722,
															"nodeType": "Block",
															"src": "7027:76:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 719,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 716,
																				"src": "7089:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 718,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "7082:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7082:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 721,
																	"nodeType": "ExpressionStatement",
																	"src": "7082:14:6"
																}
															]
														},
														"errorName": "Error",
														"id": 723,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 717,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 716,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "7019:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 723,
																	"src": "7005:20:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 715,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "7005:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "7004:22:6"
														},
														"src": "6993:110:6"
													},
													{
														"block": {
															"id": 728,
															"nodeType": "Block",
															"src": "7110:38:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "53776170206661696c6564",
																				"id": 725,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7127:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_179799c46f636fb7268f34ab3b1b94bc88b91aaeefb7ef2027cbcce0bd669c69",
																					"typeString": "literal_string \"Swap failed\""
																				},
																				"value": "Swap failed"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_179799c46f636fb7268f34ab3b1b94bc88b91aaeefb7ef2027cbcce0bd669c69",
																					"typeString": "literal_string \"Swap failed\""
																				}
																			],
																			"id": 724,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "7120:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7120:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 727,
																	"nodeType": "ExpressionStatement",
																	"src": "7120:21:6"
																}
															]
														},
														"errorName": "",
														"id": 729,
														"nodeType": "TryCatchClause",
														"src": "7104:44:6"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 684,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "6455:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 685,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "6490:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 686,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "6521:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"expression": {
																		"id": 687,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6553:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6557:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6553:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 689,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6639:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6645:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "6639:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "333030",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6657:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		},
																		"value": "300"
																	},
																	"src": "6639:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 693,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "6701:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 694,
																	"name": "minEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6748:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6791:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"expression": {
																	"id": 682,
																	"name": "ISwapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "6393:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$225_$",
																		"typeString": "type(contract ISwapRouter)"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6405:22:6",
																"memberName": "ExactInputSingleParams",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 149,
																"src": "6393:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$149_storage_ptr_$",
																	"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"6446:7:6",
																"6480:8:6",
																"6516:3:6",
																"6542:9:6",
																"6629:8:6",
																"6691:8:6",
																"6730:16:6",
																"6772:17:6"
															],
															"names": [
																"tokenIn",
																"tokenOut",
																"fee",
																"recipient",
																"deadline",
																"amountIn",
																"amountOutMinimum",
																"sqrtPriceLimitX96"
															],
															"nodeType": "FunctionCall",
															"src": "6393:414:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$149_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$149_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 680,
															"name": "uniswapV3Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6347:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$225",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6363:16:6",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "6347:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$149_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6347:470:6",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 730,
												"nodeType": "TryStatement",
												"src": "6335:813:6"
											}
										]
									},
									"functionSelector": "a22280a6",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 612,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 611,
												"name": "nonReentrant",
												"nameLocations": [
													"5257:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "5257:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5257:12:6"
										},
										{
											"id": 614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 613,
												"name": "withinTradingWindow",
												"nameLocations": [
													"5270:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 418,
												"src": "5270:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5270:19:6"
										},
										{
											"id": 616,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 615,
												"name": "notInEmergency",
												"nameLocations": [
													"5290:14:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 428,
												"src": "5290:14:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5290:14:6"
										}
									],
									"name": "swapTokensForETH",
									"nameLocation": "5173:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "5203:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5195:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "slippageTolerance",
												"nameLocation": "5228:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5220:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5189:58:6"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5305:0:6"
									},
									"scope": 792,
									"src": "5164:1986:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7242:380:6",
										"statements": [
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "tokenBalance",
														"nameLocation": "7303:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "7295:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7295:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 743,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7342:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapBot_$792",
																		"typeString": "contract UniswapBot"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapBot_$792",
																		"typeString": "contract UniswapBot"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7334:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7334:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7334:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 739,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "7318:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Minimal_$125",
																"typeString": "contract IERC20Minimal"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7324:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "7318:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7295:53:6"
											},
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "ethBalance",
														"nameLocation": "7366:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "7358:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7358:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 751,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7387:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UniswapBot_$792",
																	"typeString": "contract UniswapBot"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UniswapBot_$792",
																	"typeString": "contract UniswapBot"
																}
															],
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7379:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 749,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7379:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7379:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7393:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "7379:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7358:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "7478:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "7485:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 755,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "7463:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Minimal_$125",
																"typeString": "contract IERC20Minimal"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7469:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 74,
														"src": "7463:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7463:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "7463:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "ethBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "7532:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 764,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "7516:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7508:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7508:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7508:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7523:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7508:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7508:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "7508:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 771,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "7590:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 772,
															"name": "ethBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "7604:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "7581:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7581:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "EmitStatement",
												"src": "7576:39:6"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 735,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 734,
												"name": "onlyOwner",
												"nameLocations": [
													"7232:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "7232:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7232:9:6"
										}
									],
									"name": "withdraw",
									"nameLocation": "7214:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7222:2:6"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7242:0:6"
									},
									"scope": 792,
									"src": "7205:417:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "7719:184:6",
										"statements": [
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 781,
														"name": "emergencyStopActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "7773:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7795:20:6",
														"subExpression": {
															"id": 782,
															"name": "emergencyStopActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7796:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7773:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "7773:42:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 787,
															"name": "emergencyStopActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7876:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 786,
														"name": "EmergencyStopTriggered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "7853:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7853:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "EmitStatement",
												"src": "7848:48:6"
											}
										]
									},
									"functionSelector": "554a731d",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 778,
												"name": "onlyOwner",
												"nameLocations": [
													"7709:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "7709:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7709:9:6"
										}
									],
									"name": "triggerEmergencyStop",
									"nameLocation": "7679:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7699:2:6"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7719:0:6"
									},
									"scope": 792,
									"src": "7670:233:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 793,
							"src": "357:7548:6",
							"usedErrors": []
						}
					],
					"src": "32:7873:6"
				},
				"id": 6
			}
		}
	}
}